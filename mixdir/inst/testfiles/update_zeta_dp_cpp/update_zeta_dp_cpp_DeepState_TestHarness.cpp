// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// update_zeta_dp_cpp_DeepState_TestHarness_generation.cpp and update_zeta_dp_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix update_zeta_dp_cpp(NumericMatrix zeta, NumericMatrix X, NumericVector phia, NumericVector kappa1, NumericVector kappa2, int n_ind, int n_quest, int n_latent, int n_cat);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix zeta  = RcppDeepState_NumericMatrix();
  qs::c_qsave(zeta,"/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/inputs/zeta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "zeta values: "<< zeta << std::endl;
  NumericMatrix X  = RcppDeepState_NumericMatrix();
  qs::c_qsave(X,"/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/inputs/X.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  NumericVector phia  = RcppDeepState_NumericVector();
  qs::c_qsave(phia,"/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/inputs/phia.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phia values: "<< phia << std::endl;
  NumericVector kappa1  = RcppDeepState_NumericVector();
  qs::c_qsave(kappa1,"/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/inputs/kappa1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kappa1 values: "<< kappa1 << std::endl;
  NumericVector kappa2  = RcppDeepState_NumericVector();
  qs::c_qsave(kappa2,"/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/inputs/kappa2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kappa2 values: "<< kappa2 << std::endl;
  IntegerVector n_ind(1);
  n_ind[0]  = RcppDeepState_int();
  qs::c_qsave(n_ind,"/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/inputs/n_ind.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_ind values: "<< n_ind << std::endl;
  IntegerVector n_quest(1);
  n_quest[0]  = RcppDeepState_int();
  qs::c_qsave(n_quest,"/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/inputs/n_quest.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_quest values: "<< n_quest << std::endl;
  IntegerVector n_latent(1);
  n_latent[0]  = RcppDeepState_int();
  qs::c_qsave(n_latent,"/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/inputs/n_latent.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_latent values: "<< n_latent << std::endl;
  IntegerVector n_cat(1);
  n_cat[0]  = RcppDeepState_int();
  qs::c_qsave(n_cat,"/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/inputs/n_cat.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_cat values: "<< n_cat << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    update_zeta_dp_cpp(zeta,X,phia,kappa1,kappa2,n_ind[0],n_quest[0],n_latent[0],n_cat[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
