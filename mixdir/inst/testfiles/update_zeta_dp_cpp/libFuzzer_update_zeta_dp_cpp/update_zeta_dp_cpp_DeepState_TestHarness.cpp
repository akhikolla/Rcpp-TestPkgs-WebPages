// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// update_zeta_dp_cpp_DeepState_TestHarness_generation.cpp and update_zeta_dp_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix update_zeta_dp_cpp(NumericMatrix zeta, NumericMatrix X, NumericVector phia, NumericVector kappa1, NumericVector kappa2, int n_ind, int n_quest, int n_latent, int n_cat);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix zeta  = RcppDeepState_NumericMatrix();
  std::string zeta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/libFuzzer_update_zeta_dp_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_zeta.qs";
  qs::c_qsave(zeta,zeta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "zeta values: "<< zeta << std::endl;
  NumericMatrix X  = RcppDeepState_NumericMatrix();
  std::string X_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/libFuzzer_update_zeta_dp_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_X.qs";
  qs::c_qsave(X,X_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  NumericVector phia  = RcppDeepState_NumericVector();
  std::string phia_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/libFuzzer_update_zeta_dp_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_phia.qs";
  qs::c_qsave(phia,phia_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phia values: "<< phia << std::endl;
  NumericVector kappa1  = RcppDeepState_NumericVector();
  std::string kappa1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/libFuzzer_update_zeta_dp_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_kappa1.qs";
  qs::c_qsave(kappa1,kappa1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kappa1 values: "<< kappa1 << std::endl;
  NumericVector kappa2  = RcppDeepState_NumericVector();
  std::string kappa2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/libFuzzer_update_zeta_dp_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_kappa2.qs";
  qs::c_qsave(kappa2,kappa2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kappa2 values: "<< kappa2 << std::endl;
  IntegerVector n_ind(1);
  n_ind[0]  = RcppDeepState_int();
  std::string n_ind_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/libFuzzer_update_zeta_dp_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n_ind.qs";
  qs::c_qsave(n_ind,n_ind_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_ind values: "<< n_ind << std::endl;
  IntegerVector n_quest(1);
  n_quest[0]  = RcppDeepState_int();
  std::string n_quest_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/libFuzzer_update_zeta_dp_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n_quest.qs";
  qs::c_qsave(n_quest,n_quest_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_quest values: "<< n_quest << std::endl;
  IntegerVector n_latent(1);
  n_latent[0]  = RcppDeepState_int();
  std::string n_latent_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/libFuzzer_update_zeta_dp_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n_latent.qs";
  qs::c_qsave(n_latent,n_latent_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_latent values: "<< n_latent << std::endl;
  IntegerVector n_cat(1);
  n_cat[0]  = RcppDeepState_int();
  std::string n_cat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mixdir/inst/testfiles/update_zeta_dp_cpp/libFuzzer_update_zeta_dp_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n_cat.qs";
  qs::c_qsave(n_cat,n_cat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_cat values: "<< n_cat << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    update_zeta_dp_cpp(zeta,X,phia,kappa1,kappa2,n_ind[0],n_quest[0],n_latent[0],n_cat[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
