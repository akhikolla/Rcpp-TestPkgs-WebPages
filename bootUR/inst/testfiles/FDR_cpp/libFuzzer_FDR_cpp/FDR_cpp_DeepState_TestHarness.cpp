// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// FDR_cpp_DeepState_TestHarness_generation.cpp and FDR_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp:: List FDR_cpp(const arma::mat& test_i, const arma::mat& t_star, const double& level);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream test_i_stream;
  arma::mat test_i  = RcppDeepState_mat();
  test_i_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/bootUR/inst/testfiles/FDR_cpp/inputs/test_i");
  test_i_stream << test_i;
  std::cout << "test_i values: "<< test_i << std::endl;
  test_i_stream.close();
  std::ofstream t_star_stream;
  arma::mat t_star  = RcppDeepState_mat();
  t_star_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/bootUR/inst/testfiles/FDR_cpp/inputs/t_star");
  t_star_stream << t_star;
  std::cout << "t_star values: "<< t_star << std::endl;
  t_star_stream.close();
  NumericVector level(1);
  level[0]  = RcppDeepState_double();
  std::string level_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bootUR/inst/testfiles/FDR_cpp/libFuzzer_FDR_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_level.qs";
  qs::c_qsave(level,level_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "level values: "<< level << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    FDR_cpp(test_i,t_star,level[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
