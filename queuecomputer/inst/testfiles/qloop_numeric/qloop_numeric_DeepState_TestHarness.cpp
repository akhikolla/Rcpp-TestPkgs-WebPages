// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// qloop_numeric_DeepState_TestHarness_generation.cpp and qloop_numeric_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List qloop_numeric(NumericVector times, NumericVector service, int n_servers);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector times  = RcppDeepState_NumericVector();
  qs::c_qsave(times,"/home/akhila/fuzzer_packages/fuzzedpackages/queuecomputer/inst/testfiles/qloop_numeric/inputs/times.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "times values: "<< times << std::endl;
  NumericVector service  = RcppDeepState_NumericVector();
  qs::c_qsave(service,"/home/akhila/fuzzer_packages/fuzzedpackages/queuecomputer/inst/testfiles/qloop_numeric/inputs/service.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "service values: "<< service << std::endl;
  IntegerVector n_servers(1);
  n_servers[0]  = RcppDeepState_int();
  qs::c_qsave(n_servers,"/home/akhila/fuzzer_packages/fuzzedpackages/queuecomputer/inst/testfiles/qloop_numeric/inputs/n_servers.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_servers values: "<< n_servers << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    qloop_numeric(times,service,n_servers[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
