// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// hClustering_DeepState_TestHarness_generation.cpp and hClustering_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector hClustering(arma::mat& distance_matrix, double threshold);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  std::ofstream distance_matrix_stream;
  arma::mat distance_matrix  = RcppDeepState_mat();
  distance_matrix_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/imbalance/inst/testfiles/hClustering/inputs/distance_matrix");
  distance_matrix_stream << distance_matrix;
  std::cout << "distance_matrix values: "<< distance_matrix << std::endl;
  distance_matrix_stream.close();
  NumericVector threshold(1);
  threshold[0]  = RcppDeepState_double();
  qs::c_qsave(threshold,"/home/akhila/fuzzer_packages/fuzzedpackages/imbalance/inst/testfiles/hClustering/inputs/threshold.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "threshold values: "<< threshold << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    hClustering(distance_matrix,threshold[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
