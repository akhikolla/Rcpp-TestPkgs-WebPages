// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// hClustering_DeepState_TestHarness_generation.cpp and hClustering_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector hClustering(arma::mat& distance_matrix, double threshold);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream distance_matrix_stream;
  arma::mat distance_matrix  = RcppDeepState_mat();
  distance_matrix_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/imbalance/inst/testfiles/hClustering/inputs/distance_matrix");
  distance_matrix_stream << distance_matrix;
  std::cout << "distance_matrix values: "<< distance_matrix << std::endl;
  distance_matrix_stream.close();
  NumericVector threshold(1);
  threshold[0]  = RcppDeepState_double();
  std::string threshold_t = "/home/akhila/fuzzer_packages/fuzzedpackages/imbalance/inst/testfiles/hClustering/libFuzzer_hClustering/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_threshold.qs";
  qs::c_qsave(threshold,threshold_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "threshold values: "<< threshold << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    hClustering(distance_matrix,threshold[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
