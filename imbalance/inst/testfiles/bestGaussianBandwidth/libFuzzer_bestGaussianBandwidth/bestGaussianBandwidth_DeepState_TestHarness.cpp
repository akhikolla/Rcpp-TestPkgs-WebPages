// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// bestGaussianBandwidth_DeepState_TestHarness_generation.cpp and bestGaussianBandwidth_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double bestGaussianBandwidth(arma::mat& dataset, arma::mat& covInv);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream dataset_stream;
  arma::mat dataset  = RcppDeepState_mat();
  dataset_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/imbalance/inst/testfiles/bestGaussianBandwidth/inputs/dataset");
  dataset_stream << dataset;
  std::cout << "dataset values: "<< dataset << std::endl;
  dataset_stream.close();
  std::ofstream covInv_stream;
  arma::mat covInv  = RcppDeepState_mat();
  covInv_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/imbalance/inst/testfiles/bestGaussianBandwidth/inputs/covInv");
  covInv_stream << covInv;
  std::cout << "covInv values: "<< covInv << std::endl;
  covInv_stream.close();
  std::cout << "input ends" << std::endl;
  try{
    bestGaussianBandwidth(dataset,covInv);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
