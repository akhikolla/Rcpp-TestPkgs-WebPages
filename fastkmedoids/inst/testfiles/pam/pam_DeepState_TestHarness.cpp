// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// pam_DeepState_TestHarness_generation.cpp and pam_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

S4 pam(NumericVector rdist, int n, int k, int maxiter);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector rdist  = RcppDeepState_NumericVector();
  qs::c_qsave(rdist,"/home/akhila/fuzzer_packages/fuzzedpackages/fastkmedoids/inst/testfiles/pam/inputs/rdist.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rdist values: "<< rdist << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/fastkmedoids/inst/testfiles/pam/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  IntegerVector k(1);
  k[0]  = RcppDeepState_int();
  qs::c_qsave(k,"/home/akhila/fuzzer_packages/fuzzedpackages/fastkmedoids/inst/testfiles/pam/inputs/k.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "k values: "<< k << std::endl;
  IntegerVector maxiter(1);
  maxiter[0]  = RcppDeepState_int();
  qs::c_qsave(maxiter,"/home/akhila/fuzzer_packages/fuzzedpackages/fastkmedoids/inst/testfiles/pam/inputs/maxiter.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxiter values: "<< maxiter << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    pam(rdist,n[0],k[0],maxiter[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
