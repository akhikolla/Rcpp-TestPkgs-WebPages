// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// admm_rpca_DeepState_TestHarness_generation.cpp and admm_rpca_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List admm_rpca(const arma::mat& M, const double tol, const int maxiter, double mu, double lambda);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream M_stream;
  arma::mat M  = RcppDeepState_mat();
  M_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/ADMM/inst/testfiles/admm_rpca/inputs/M");
  M_stream << M;
  std::cout << "M values: "<< M << std::endl;
  M_stream.close();
  NumericVector tol(1);
  tol[0]  = RcppDeepState_double();
  std::string tol_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ADMM/inst/testfiles/admm_rpca/libFuzzer_admm_rpca/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tol.qs";
  qs::c_qsave(tol,tol_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tol values: "<< tol << std::endl;
  IntegerVector maxiter(1);
  maxiter[0]  = RcppDeepState_int();
  std::string maxiter_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ADMM/inst/testfiles/admm_rpca/libFuzzer_admm_rpca/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_maxiter.qs";
  qs::c_qsave(maxiter,maxiter_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxiter values: "<< maxiter << std::endl;
  NumericVector mu(1);
  mu[0]  = RcppDeepState_double();
  std::string mu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ADMM/inst/testfiles/admm_rpca/libFuzzer_admm_rpca/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mu.qs";
  qs::c_qsave(mu,mu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector lambda(1);
  lambda[0]  = RcppDeepState_double();
  std::string lambda_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ADMM/inst/testfiles/admm_rpca/libFuzzer_admm_rpca/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambda.qs";
  qs::c_qsave(lambda,lambda_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda values: "<< lambda << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    admm_rpca(M,tol[0],maxiter[0],mu[0],lambda[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
