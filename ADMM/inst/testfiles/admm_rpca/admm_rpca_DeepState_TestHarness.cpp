// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// admm_rpca_DeepState_TestHarness_generation.cpp and admm_rpca_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List admm_rpca(const arma::mat& M, const double tol, const int maxiter, double mu, double lambda);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  std::ofstream M_stream;
  arma::mat M  = RcppDeepState_mat();
  M_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/ADMM/inst/testfiles/admm_rpca/inputs/M");
  M_stream << M;
  std::cout << "M values: "<< M << std::endl;
  M_stream.close();
  NumericVector tol(1);
  tol[0]  = RcppDeepState_double();
  qs::c_qsave(tol,"/home/akhila/fuzzer_packages/fuzzedpackages/ADMM/inst/testfiles/admm_rpca/inputs/tol.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tol values: "<< tol << std::endl;
  IntegerVector maxiter(1);
  maxiter[0]  = RcppDeepState_int();
  qs::c_qsave(maxiter,"/home/akhila/fuzzer_packages/fuzzedpackages/ADMM/inst/testfiles/admm_rpca/inputs/maxiter.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxiter values: "<< maxiter << std::endl;
  NumericVector mu(1);
  mu[0]  = RcppDeepState_double();
  qs::c_qsave(mu,"/home/akhila/fuzzer_packages/fuzzedpackages/ADMM/inst/testfiles/admm_rpca/inputs/mu.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector lambda(1);
  lambda[0]  = RcppDeepState_double();
  qs::c_qsave(lambda,"/home/akhila/fuzzer_packages/fuzzedpackages/ADMM/inst/testfiles/admm_rpca/inputs/lambda.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda values: "<< lambda << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    admm_rpca(M,tol[0],maxiter[0],mu[0],lambda[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
