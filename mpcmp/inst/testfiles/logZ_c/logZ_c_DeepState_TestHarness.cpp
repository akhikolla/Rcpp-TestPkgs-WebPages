// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// logZ_c_DeepState_TestHarness_generation.cpp and logZ_c_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector logZ_c(NumericVector log_lambda, NumericVector nu, int summax);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector log_lambda  = RcppDeepState_NumericVector();
  qs::c_qsave(log_lambda,"/home/akhila/fuzzer_packages/fuzzedpackages/mpcmp/inst/testfiles/logZ_c/inputs/log_lambda.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "log_lambda values: "<< log_lambda << std::endl;
  NumericVector nu  = RcppDeepState_NumericVector();
  qs::c_qsave(nu,"/home/akhila/fuzzer_packages/fuzzedpackages/mpcmp/inst/testfiles/logZ_c/inputs/nu.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nu values: "<< nu << std::endl;
  IntegerVector summax(1);
  summax[0]  = RcppDeepState_int();
  qs::c_qsave(summax,"/home/akhila/fuzzer_packages/fuzzedpackages/mpcmp/inst/testfiles/logZ_c/inputs/summax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "summax values: "<< summax << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    logZ_c(log_lambda,nu,summax[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
