// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// colsums_sapply_DeepState_TestHarness_generation.cpp and colsums_sapply_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::mat colsums_sapply(int i, arma::mat rupt, arma::mat x, arma::mat mu, arma::mat tau);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector i(1);
  i[0]  = RcppDeepState_int();
  qs::c_qsave(i,"/home/akhila/fuzzer_packages/fuzzedpackages/segclust2d/inst/testfiles/colsums_sapply/inputs/i.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "i values: "<< i << std::endl;
  std::ofstream rupt_stream;
  arma::mat rupt  = RcppDeepState_mat();
  rupt_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/segclust2d/inst/testfiles/colsums_sapply/inputs/rupt");
  rupt_stream << rupt;
  std::cout << "rupt values: "<< rupt << std::endl;
  rupt_stream.close();
  std::ofstream x_stream;
  arma::mat x  = RcppDeepState_mat();
  x_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/segclust2d/inst/testfiles/colsums_sapply/inputs/x");
  x_stream << x;
  std::cout << "x values: "<< x << std::endl;
  x_stream.close();
  std::ofstream mu_stream;
  arma::mat mu  = RcppDeepState_mat();
  mu_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/segclust2d/inst/testfiles/colsums_sapply/inputs/mu");
  mu_stream << mu;
  std::cout << "mu values: "<< mu << std::endl;
  mu_stream.close();
  std::ofstream tau_stream;
  arma::mat tau  = RcppDeepState_mat();
  tau_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/segclust2d/inst/testfiles/colsums_sapply/inputs/tau");
  tau_stream << tau;
  std::cout << "tau values: "<< tau << std::endl;
  tau_stream.close();
  std::cout << "input ends" << std::endl;
  try{
    colsums_sapply(i[0],rupt,x,mu,tau);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
