// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// row_var_dgcmatrix_DeepState_TestHarness_generation.cpp and row_var_dgcmatrix_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector row_var_dgcmatrix(NumericVector x, IntegerVector i, int rows, int cols);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sctransform/inst/testfiles/row_var_dgcmatrix/libFuzzer_row_var_dgcmatrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector i  = RcppDeepState_IntegerVector();
  std::string i_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sctransform/inst/testfiles/row_var_dgcmatrix/libFuzzer_row_var_dgcmatrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_i.qs";
  qs::c_qsave(i,i_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "i values: "<< i << std::endl;
  IntegerVector rows(1);
  rows[0]  = RcppDeepState_int();
  std::string rows_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sctransform/inst/testfiles/row_var_dgcmatrix/libFuzzer_row_var_dgcmatrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rows.qs";
  qs::c_qsave(rows,rows_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rows values: "<< rows << std::endl;
  IntegerVector cols(1);
  cols[0]  = RcppDeepState_int();
  std::string cols_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sctransform/inst/testfiles/row_var_dgcmatrix/libFuzzer_row_var_dgcmatrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_cols.qs";
  qs::c_qsave(cols,cols_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cols values: "<< cols << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    row_var_dgcmatrix(x,i,rows[0],cols[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
