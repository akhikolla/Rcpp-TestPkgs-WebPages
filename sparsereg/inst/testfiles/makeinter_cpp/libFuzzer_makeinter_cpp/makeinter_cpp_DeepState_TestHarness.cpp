// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// makeinter_cpp_DeepState_TestHarness_generation.cpp and makeinter_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List makeinter_cpp(Rcpp::NumericVector X00, Rcpp::NumericVector X10, Rcpp::NumericVector X20);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector X00  = RcppDeepState_NumericVector();
  std::string X00_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sparsereg/inst/testfiles/makeinter_cpp/libFuzzer_makeinter_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_X00.qs";
  qs::c_qsave(X00,X00_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X00 values: "<< X00 << std::endl;
  NumericVector X10  = RcppDeepState_NumericVector();
  std::string X10_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sparsereg/inst/testfiles/makeinter_cpp/libFuzzer_makeinter_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_X10.qs";
  qs::c_qsave(X10,X10_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X10 values: "<< X10 << std::endl;
  NumericVector X20  = RcppDeepState_NumericVector();
  std::string X20_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sparsereg/inst/testfiles/makeinter_cpp/libFuzzer_makeinter_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_X20.qs";
  qs::c_qsave(X20,X20_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X20 values: "<< X20 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    makeinter_cpp(X00,X10,X20);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
