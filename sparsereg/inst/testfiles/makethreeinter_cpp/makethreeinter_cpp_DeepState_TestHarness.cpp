// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// makethreeinter_cpp_DeepState_TestHarness_generation.cpp and makethreeinter_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List makethreeinter_cpp(Rcpp::NumericVector X00, Rcpp::NumericVector X10, Rcpp::NumericVector X110, Rcpp::NumericVector X20);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector X00  = RcppDeepState_NumericVector();
  qs::c_qsave(X00,"/home/akhila/fuzzer_packages/fuzzedpackages/sparsereg/inst/testfiles/makethreeinter_cpp/inputs/X00.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X00 values: "<< X00 << std::endl;
  NumericVector X10  = RcppDeepState_NumericVector();
  qs::c_qsave(X10,"/home/akhila/fuzzer_packages/fuzzedpackages/sparsereg/inst/testfiles/makethreeinter_cpp/inputs/X10.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X10 values: "<< X10 << std::endl;
  NumericVector X110  = RcppDeepState_NumericVector();
  qs::c_qsave(X110,"/home/akhila/fuzzer_packages/fuzzedpackages/sparsereg/inst/testfiles/makethreeinter_cpp/inputs/X110.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X110 values: "<< X110 << std::endl;
  NumericVector X20  = RcppDeepState_NumericVector();
  qs::c_qsave(X20,"/home/akhila/fuzzer_packages/fuzzedpackages/sparsereg/inst/testfiles/makethreeinter_cpp/inputs/X20.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X20 values: "<< X20 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    makethreeinter_cpp(X00,X10,X110,X20);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
