<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./rcpp_covg_alpha_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_output/427b6523313b4de6ddb87a14c15a9d3efb950c93.pass</line>
</preamble>

<pid>2550585</pid>
<ppid>2550584</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_output/log_427b6523313b4de6ddb87a14c15a9d3efb950c93/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./rcpp_covg_alpha_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_output/427b6523313b4de6ddb87a14c15a9d3efb950c93.pass</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.023 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D2B5A1</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/src/GiniDistance.so</obj>
      <fn>rcpp_covg_alpha(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, double)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/src</dir>
      <file>GiniFunctions.cpp</file>
      <line>190</line>
    </frame>
    <frame>
      <ip>0x40A14A</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha</dir>
      <file>rcpp_covg_alpha_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha</dir>
      <file>rcpp_covg_alpha_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF88</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D229</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D304</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x8ae46b8 is 24 bytes after a block of size 7,968 in arena "client"</auxwhat>
</error>

<error>
  <unique>0x1d</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D2B5A6</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/src/GiniDistance.so</obj>
      <fn>rcpp_covg_alpha(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, double)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/src</dir>
      <file>GiniFunctions.cpp</file>
      <line>190</line>
    </frame>
    <frame>
      <ip>0x40A14A</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha</dir>
      <file>rcpp_covg_alpha_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha</dir>
      <file>rcpp_covg_alpha_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF88</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D229</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D304</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/GiniDistance/inst/testfiles/rcpp_covg_alpha/rcpp_covg_alpha_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x8ae46b8 is 24 bytes after a block of size 7,968 in arena "client"</auxwhat>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:07.238 </time>
</status>

<errorcounts>
  <pair>
    <count>11</count>
    <unique>0x1d</unique>
  </pair>
  <pair>
    <count>29</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:07.698 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

