// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rgbToGray_DeepState_TestHarness_generation.cpp and rgbToGray_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericMatrix rgbToGray(Rcpp::NumericMatrix ch1, Rcpp::NumericMatrix ch2, Rcpp::NumericMatrix ch3);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix ch1  = RcppDeepState_NumericMatrix();
  qs::c_qsave(ch1,"/home/akhila/fuzzer_packages/fuzzedpackages/StereoMorph/inst/testfiles/rgbToGray/inputs/ch1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ch1 values: "<< ch1 << std::endl;
  NumericMatrix ch2  = RcppDeepState_NumericMatrix();
  qs::c_qsave(ch2,"/home/akhila/fuzzer_packages/fuzzedpackages/StereoMorph/inst/testfiles/rgbToGray/inputs/ch2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ch2 values: "<< ch2 << std::endl;
  NumericMatrix ch3  = RcppDeepState_NumericMatrix();
  qs::c_qsave(ch3,"/home/akhila/fuzzer_packages/fuzzedpackages/StereoMorph/inst/testfiles/rgbToGray/inputs/ch3.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ch3 values: "<< ch3 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rgbToGray(ch1,ch2,ch3);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
