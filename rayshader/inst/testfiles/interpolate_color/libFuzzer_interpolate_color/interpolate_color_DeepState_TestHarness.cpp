// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// interpolate_color_DeepState_TestHarness_generation.cpp and interpolate_color_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix interpolate_color(double color_nw, double color_ne, double color_se, double color_sw);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector color_nw(1);
  color_nw[0]  = RcppDeepState_double();
  std::string color_nw_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/interpolate_color/libFuzzer_interpolate_color/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_color_nw.qs";
  qs::c_qsave(color_nw,color_nw_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "color_nw values: "<< color_nw << std::endl;
  NumericVector color_ne(1);
  color_ne[0]  = RcppDeepState_double();
  std::string color_ne_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/interpolate_color/libFuzzer_interpolate_color/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_color_ne.qs";
  qs::c_qsave(color_ne,color_ne_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "color_ne values: "<< color_ne << std::endl;
  NumericVector color_se(1);
  color_se[0]  = RcppDeepState_double();
  std::string color_se_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/interpolate_color/libFuzzer_interpolate_color/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_color_se.qs";
  qs::c_qsave(color_se,color_se_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "color_se values: "<< color_se << std::endl;
  NumericVector color_sw(1);
  color_sw[0]  = RcppDeepState_double();
  std::string color_sw_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/interpolate_color/libFuzzer_interpolate_color/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_color_sw.qs";
  qs::c_qsave(color_sw,color_sw_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "color_sw values: "<< color_sw << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    interpolate_color(color_nw[0],color_ne[0],color_se[0],color_sw[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
