// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// construct_matrix_DeepState_TestHarness_generation.cpp and construct_matrix_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix construct_matrix(NumericMatrix image_reference, int number_rows, int number_cols, const IntegerVector& index_x, const IntegerVector& index_y);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix image_reference  = RcppDeepState_NumericMatrix();
  qs::c_qsave(image_reference,"/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/construct_matrix/inputs/image_reference.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "image_reference values: "<< image_reference << std::endl;
  IntegerVector number_rows(1);
  number_rows[0]  = RcppDeepState_int();
  qs::c_qsave(number_rows,"/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/construct_matrix/inputs/number_rows.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "number_rows values: "<< number_rows << std::endl;
  IntegerVector number_cols(1);
  number_cols[0]  = RcppDeepState_int();
  qs::c_qsave(number_cols,"/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/construct_matrix/inputs/number_cols.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "number_cols values: "<< number_cols << std::endl;
  IntegerVector index_x  = RcppDeepState_IntegerVector();
  qs::c_qsave(index_x,"/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/construct_matrix/inputs/index_x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "index_x values: "<< index_x << std::endl;
  IntegerVector index_y  = RcppDeepState_IntegerVector();
  qs::c_qsave(index_y,"/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/construct_matrix/inputs/index_y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "index_y values: "<< index_y << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    construct_matrix(image_reference,number_rows[0],number_cols[0],index_x,index_y);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
