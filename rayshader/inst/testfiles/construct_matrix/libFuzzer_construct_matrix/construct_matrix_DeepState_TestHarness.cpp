// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// construct_matrix_DeepState_TestHarness_generation.cpp and construct_matrix_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix construct_matrix(NumericMatrix image_reference, int number_rows, int number_cols, const IntegerVector& index_x, const IntegerVector& index_y);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix image_reference  = RcppDeepState_NumericMatrix();
  std::string image_reference_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/construct_matrix/libFuzzer_construct_matrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_image_reference.qs";
  qs::c_qsave(image_reference,image_reference_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "image_reference values: "<< image_reference << std::endl;
  IntegerVector number_rows(1);
  number_rows[0]  = RcppDeepState_int();
  std::string number_rows_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/construct_matrix/libFuzzer_construct_matrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_number_rows.qs";
  qs::c_qsave(number_rows,number_rows_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "number_rows values: "<< number_rows << std::endl;
  IntegerVector number_cols(1);
  number_cols[0]  = RcppDeepState_int();
  std::string number_cols_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/construct_matrix/libFuzzer_construct_matrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_number_cols.qs";
  qs::c_qsave(number_cols,number_cols_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "number_cols values: "<< number_cols << std::endl;
  IntegerVector index_x  = RcppDeepState_IntegerVector();
  std::string index_x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/construct_matrix/libFuzzer_construct_matrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_index_x.qs";
  qs::c_qsave(index_x,index_x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "index_x values: "<< index_x << std::endl;
  IntegerVector index_y  = RcppDeepState_IntegerVector();
  std::string index_y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/construct_matrix/libFuzzer_construct_matrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_index_y.qs";
  qs::c_qsave(index_y,index_y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "index_y values: "<< index_y << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    construct_matrix(image_reference,number_rows[0],number_cols[0],index_x,index_y);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
