// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// subsample_rect_DeepState_TestHarness_generation.cpp and subsample_rect_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::mat subsample_rect(arma::mat& rect, int binsx, int binsy);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  std::ofstream rect_stream;
  arma::mat rect  = RcppDeepState_mat();
  rect_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/subsample_rect/inputs/rect");
  rect_stream << rect;
  std::cout << "rect values: "<< rect << std::endl;
  rect_stream.close();
  IntegerVector binsx(1);
  binsx[0]  = RcppDeepState_int();
  qs::c_qsave(binsx,"/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/subsample_rect/inputs/binsx.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "binsx values: "<< binsx << std::endl;
  IntegerVector binsy(1);
  binsy[0]  = RcppDeepState_int();
  qs::c_qsave(binsy,"/home/akhila/fuzzer_packages/fuzzedpackages/rayshader/inst/testfiles/subsample_rect/inputs/binsy.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "binsy values: "<< binsy << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    subsample_rect(rect,binsx[0],binsy[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
