<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./subst_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_output/c8c4d093cb893bc3705e2f9671c4113daf17faab.fail</line>
</preamble>

<pid>2475254</pid>
<ppid>2475253</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_output/log_c8c4d093cb893bc3705e2f9671c4113daf17faab/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./subst_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_output/c8c4d093cb893bc3705e2f9671c4113daf17faab.fail</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.045 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:00:08.582 </time>
</status>

<error>
  <unique>0x9</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are definitely lost in loss record 10 of 1,323</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4D060F7</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RInside/lib/libRInside.so</obj>
      <fn>RInside::initialize(int, char const* const*, bool, bool, bool)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/RInside/src</dir>
      <file>RInside.cpp</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x4D06483</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RInside/lib/libRInside.so</obj>
      <fn>RInside::RInside()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/RInside/src</dir>
      <file>RInside.cpp</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x409BC3</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst</dir>
      <file>subst_DeepState_TestHarness.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x409BA8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst</dir>
      <file>subst_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41E568</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41E809</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E8E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4076B5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x30</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>136 bytes in 1 blocks are possibly lost in loss record 49 of 1,323</text>
    <leakedbytes>136</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4DDD2E3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>__cxa_allocate_exception</fn>
    </frame>
    <frame>
      <ip>0x4D22974</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>Eigen::internal::throw_std_bad_alloc()</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppEigen/include/Eigen/src/Core/util</dir>
      <file>Memory.h</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x4D226AB</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>aligned_malloc</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppEigen/include/Eigen/src/Core/util</dir>
      <file>Memory.h</file>
      <line>168</line>
    </frame>
    <frame>
      <ip>0x4D226AB</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>conditional_aligned_malloc&lt;true&gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppEigen/include/Eigen/src/Core/util</dir>
      <file>Memory.h</file>
      <line>214</line>
    </frame>
    <frame>
      <ip>0x4D226AB</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>conditional_aligned_new_auto&lt;double, true&gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppEigen/include/Eigen/src/Core/util</dir>
      <file>Memory.h</file>
      <line>374</line>
    </frame>
    <frame>
      <ip>0x4D226AB</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>resize</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppEigen/include/Eigen/src/Core</dir>
      <file>DenseStorage.h</file>
      <line>408</line>
    </frame>
    <frame>
      <ip>0x4D226AB</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>resize</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppEigen/include/Eigen/src/Core</dir>
      <file>PlainObjectBase.h</file>
      <line>293</line>
    </frame>
    <frame>
      <ip>0x4D226AB</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>_init2&lt;int, int&gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppEigen/include/Eigen/src/Core</dir>
      <file>PlainObjectBase.h</file>
      <line>745</line>
    </frame>
    <frame>
      <ip>0x4D226AB</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>Matrix&lt;int, int&gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppEigen/include/Eigen/src/Core</dir>
      <file>Matrix.h</file>
      <line>302</line>
    </frame>
    <frame>
      <ip>0x4D226AB</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>subst(Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt; const&amp;, double const&amp;, int const&amp;, int const&amp;) [clone .cold]</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src</dir>
      <file>subst.cpp</file>
      <line>34</line>
    </frame>
    <frame>
      <ip>0x40A8D3</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst</dir>
      <file>subst_DeepState_TestHarness.cpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x409BA8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst</dir>
      <file>subst_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41E568</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41E809</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E8E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4076B5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xb2</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>1,025 bytes in 1 blocks are definitely lost in loss record 179 of 1,323</text>
    <leakedbytes>1025</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4E773AF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4D04C55</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RInside/lib/libRInside.so</obj>
      <fn>MemBuf::MemBuf(int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/RInside/src</dir>
      <file>MemBuf.cpp</file>
      <line>35</line>
    </frame>
    <frame>
      <ip>0x4D06467</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RInside/lib/libRInside.so</obj>
      <fn>RInside::RInside()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/RInside/src</dir>
      <file>RInside.cpp</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x409BC3</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst</dir>
      <file>subst_DeepState_TestHarness.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x409BA8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst</dir>
      <file>subst_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41E568</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41E809</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E8E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4076B5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x52a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>4,997,617,568 bytes in 1 blocks are possibly lost in loss record 1,323 of 1,323</text>
    <leakedbytes>4997617568</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4D2B8E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>allocate</fn>
      <dir>/usr/include/c++/9/ext</dir>
      <file>new_allocator.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x4D2B8E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>allocate</fn>
      <dir>/usr/include/c++/9/bits</dir>
      <file>alloc_traits.h</file>
      <line>444</line>
    </frame>
    <frame>
      <ip>0x4D2B8E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>_M_allocate</fn>
      <dir>/usr/include/c++/9/bits</dir>
      <file>stl_vector.h</file>
      <line>343</line>
    </frame>
    <frame>
      <ip>0x4D2B8E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>reserve</fn>
      <dir>/usr/include/c++/9/bits</dir>
      <file>vector.tcc</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x4D2B8E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src/sparseHessianFD.so</obj>
      <fn>subst(Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt; const&amp;, double const&amp;, int const&amp;, int const&amp;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/src</dir>
      <file>subst.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x40A8D3</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst</dir>
      <file>subst_DeepState_TestHarness.cpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x409BA8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst</dir>
      <file>subst_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41E568</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41E809</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E8E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4076B5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/subst_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:11.015 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

