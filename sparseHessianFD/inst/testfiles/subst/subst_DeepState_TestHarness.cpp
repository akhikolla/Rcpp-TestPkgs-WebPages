// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// subst_DeepState_TestHarness_generation.cpp and subst_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::S4 subst(const Rcpp::NumericMatrix& Y, const Rcpp::IntegerVector& colors, const Rcpp::IntegerVector& jCol, const Rcpp::IntegerVector& ipntr, const double& delta, const int& nvars, const int& nnz);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix Y  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Y,"/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/inputs/Y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y values: "<< Y << std::endl;
  IntegerVector colors  = RcppDeepState_IntegerVector();
  qs::c_qsave(colors,"/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/inputs/colors.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "colors values: "<< colors << std::endl;
  IntegerVector jCol  = RcppDeepState_IntegerVector();
  qs::c_qsave(jCol,"/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/inputs/jCol.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "jCol values: "<< jCol << std::endl;
  IntegerVector ipntr  = RcppDeepState_IntegerVector();
  qs::c_qsave(ipntr,"/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/inputs/ipntr.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ipntr values: "<< ipntr << std::endl;
  NumericVector delta(1);
  delta[0]  = RcppDeepState_double();
  qs::c_qsave(delta,"/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/inputs/delta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "delta values: "<< delta << std::endl;
  IntegerVector nvars(1);
  nvars[0]  = RcppDeepState_int();
  qs::c_qsave(nvars,"/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/inputs/nvars.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nvars values: "<< nvars << std::endl;
  IntegerVector nnz(1);
  nnz[0]  = RcppDeepState_int();
  qs::c_qsave(nnz,"/home/akhila/fuzzer_packages/fuzzedpackages/sparseHessianFD/inst/testfiles/subst/inputs/nnz.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nnz values: "<< nnz << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    subst(Y,colors,jCol,ipntr,delta[0],nvars[0],nnz[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
