// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Sigma_i_not_i_DeepState_TestHarness_generation.cpp and Sigma_i_not_i_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::mat Sigma_i_not_i(arma::mat x, int index);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream x_stream;
  arma::mat x  = RcppDeepState_mat();
  x_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/BGGM/inst/testfiles/Sigma_i_not_i/inputs/x");
  x_stream << x;
  std::cout << "x values: "<< x << std::endl;
  x_stream.close();
  IntegerVector index(1);
  index[0]  = RcppDeepState_int();
  std::string index_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BGGM/inst/testfiles/Sigma_i_not_i/libFuzzer_Sigma_i_not_i/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_index.qs";
  qs::c_qsave(index,index_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "index values: "<< index << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Sigma_i_not_i(x,index[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
