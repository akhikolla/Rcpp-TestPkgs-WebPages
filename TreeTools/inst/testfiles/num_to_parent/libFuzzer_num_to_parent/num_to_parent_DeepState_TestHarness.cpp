// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// num_to_parent_DeepState_TestHarness_generation.cpp and num_to_parent_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector num_to_parent(const NumericVector n, const IntegerVector nTip);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector n  = RcppDeepState_NumericVector();
  std::string n_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TreeTools/inst/testfiles/num_to_parent/libFuzzer_num_to_parent/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n.qs";
  qs::c_qsave(n,n_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  IntegerVector nTip  = RcppDeepState_IntegerVector();
  std::string n_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TreeTools/inst/testfiles/num_to_parent/libFuzzer_num_to_parent/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n.qs";
  std::string nTip_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TreeTools/inst/testfiles/num_to_parent/libFuzzer_num_to_parent/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nTip.qs";
  qs::c_qsave(nTip,nTip_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nTip values: "<< nTip << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    num_to_parent(n,nTip);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
