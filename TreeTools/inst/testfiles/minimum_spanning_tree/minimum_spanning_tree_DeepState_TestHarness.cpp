// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// minimum_spanning_tree_DeepState_TestHarness_generation.cpp and minimum_spanning_tree_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerMatrix minimum_spanning_tree(const IntegerVector order);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector order  = RcppDeepState_IntegerVector();
  qs::c_qsave(order,"/home/akhila/fuzzer_packages/fuzzedpackages/TreeTools/inst/testfiles/minimum_spanning_tree/inputs/order.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "order values: "<< order << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    minimum_spanning_tree(order);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
