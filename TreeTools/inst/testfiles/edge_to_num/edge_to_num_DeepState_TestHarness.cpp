// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// edge_to_num_DeepState_TestHarness_generation.cpp and edge_to_num_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector edge_to_num(IntegerVector parent, IntegerVector child, IntegerVector nTip);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector parent  = RcppDeepState_IntegerVector();
  qs::c_qsave(parent,"/home/akhila/fuzzer_packages/fuzzedpackages/TreeTools/inst/testfiles/edge_to_num/inputs/parent.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "parent values: "<< parent << std::endl;
  IntegerVector child  = RcppDeepState_IntegerVector();
  qs::c_qsave(child,"/home/akhila/fuzzer_packages/fuzzedpackages/TreeTools/inst/testfiles/edge_to_num/inputs/child.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "child values: "<< child << std::endl;
  IntegerVector nTip  = RcppDeepState_IntegerVector();
  qs::c_qsave(nTip,"/home/akhila/fuzzer_packages/fuzzedpackages/TreeTools/inst/testfiles/edge_to_num/inputs/nTip.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nTip values: "<< nTip << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    edge_to_num(parent,child,nTip);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
