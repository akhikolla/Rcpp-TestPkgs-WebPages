// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// getGoodness_DeepState_TestHarness_generation.cpp and getGoodness_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector getGoodness(Rcpp::NumericVector const& x, Rcpp::NumericVector const& wt, Rcpp::NumericVector const& medians);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/rpart.LAD/inst/testfiles/getGoodness/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector wt  = RcppDeepState_NumericVector();
  qs::c_qsave(wt,"/home/akhila/fuzzer_packages/fuzzedpackages/rpart.LAD/inst/testfiles/getGoodness/inputs/wt.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "wt values: "<< wt << std::endl;
  NumericVector medians  = RcppDeepState_NumericVector();
  qs::c_qsave(medians,"/home/akhila/fuzzer_packages/fuzzedpackages/rpart.LAD/inst/testfiles/getGoodness/inputs/medians.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "medians values: "<< medians << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    getGoodness(x,wt,medians);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
