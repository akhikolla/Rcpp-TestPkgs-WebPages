// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tplinfsum_DeepState_TestHarness_generation.cpp and tplinfsum_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double tplinfsum(double expo, double rate, int xmin);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector expo(1);
  expo[0]  = RcppDeepState_double();
  qs::c_qsave(expo,"/home/akhila/fuzzer_packages/fuzzedpackages/spatialwarnings/inst/testfiles/tplinfsum/inputs/expo.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "expo values: "<< expo << std::endl;
  NumericVector rate(1);
  rate[0]  = RcppDeepState_double();
  qs::c_qsave(rate,"/home/akhila/fuzzer_packages/fuzzedpackages/spatialwarnings/inst/testfiles/tplinfsum/inputs/rate.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rate values: "<< rate << std::endl;
  IntegerVector xmin(1);
  xmin[0]  = RcppDeepState_int();
  qs::c_qsave(xmin,"/home/akhila/fuzzer_packages/fuzzedpackages/spatialwarnings/inst/testfiles/tplinfsum/inputs/xmin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xmin values: "<< xmin << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tplinfsum(expo[0],rate[0],xmin[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
