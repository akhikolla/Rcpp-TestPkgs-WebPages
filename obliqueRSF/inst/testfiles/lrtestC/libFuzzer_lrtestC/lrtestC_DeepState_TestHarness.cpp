// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// lrtestC_DeepState_TestHarness_generation.cpp and lrtestC_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double lrtestC(NumericVector time, NumericVector status, NumericVector grp);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector time  = RcppDeepState_NumericVector();
  std::string time_t = "/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/lrtestC/libFuzzer_lrtestC/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_time.qs";
  qs::c_qsave(time,time_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "time values: "<< time << std::endl;
  NumericVector status  = RcppDeepState_NumericVector();
  std::string status_t = "/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/lrtestC/libFuzzer_lrtestC/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_status.qs";
  qs::c_qsave(status,status_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "status values: "<< status << std::endl;
  NumericVector grp  = RcppDeepState_NumericVector();
  std::string grp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/lrtestC/libFuzzer_lrtestC/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_grp.qs";
  qs::c_qsave(grp,grp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "grp values: "<< grp << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    lrtestC(time,status,grp);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
