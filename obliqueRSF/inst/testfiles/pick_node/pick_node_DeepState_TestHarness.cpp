// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// pick_node_DeepState_TestHarness_generation.cpp and pick_node_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

String pick_node(double wt, double cut_pnt, CharacterVector options);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector wt(1);
  wt[0]  = RcppDeepState_double();
  qs::c_qsave(wt,"/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/pick_node/inputs/wt.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "wt values: "<< wt << std::endl;
  NumericVector cut_pnt(1);
  cut_pnt[0]  = RcppDeepState_double();
  qs::c_qsave(cut_pnt,"/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/pick_node/inputs/cut_pnt.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cut_pnt values: "<< cut_pnt << std::endl;
  CharacterVector options  = RcppDeepState_CharacterVector();
  qs::c_qsave(options,"/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/pick_node/inputs/options.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "options values: "<< options << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    pick_node(wt[0],cut_pnt[0],options);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
