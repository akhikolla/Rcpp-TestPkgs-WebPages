// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// pick_node_DeepState_TestHarness_generation.cpp and pick_node_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

String pick_node(double wt, double cut_pnt, CharacterVector options);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector wt(1);
  wt[0]  = RcppDeepState_double();
  std::string wt_t = "/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/pick_node/libFuzzer_pick_node/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_wt.qs";
  qs::c_qsave(wt,wt_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "wt values: "<< wt << std::endl;
  NumericVector cut_pnt(1);
  cut_pnt[0]  = RcppDeepState_double();
  std::string cut_pnt_t = "/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/pick_node/libFuzzer_pick_node/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_cut_pnt.qs";
  qs::c_qsave(cut_pnt,cut_pnt_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cut_pnt values: "<< cut_pnt << std::endl;
  CharacterVector options  = RcppDeepState_CharacterVector();
  std::string options_t = "/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/pick_node/libFuzzer_pick_node/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_options.qs";
  qs::c_qsave(options,options_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "options values: "<< options << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    pick_node(wt[0],cut_pnt[0],options);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
