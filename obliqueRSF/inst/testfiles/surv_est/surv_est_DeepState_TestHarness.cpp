// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// surv_est_DeepState_TestHarness_generation.cpp and surv_est_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector surv_est(NumericVector times, NumericVector probs, NumericVector newtimes);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector times  = RcppDeepState_NumericVector();
  qs::c_qsave(times,"/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/surv_est/inputs/times.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "times values: "<< times << std::endl;
  NumericVector probs  = RcppDeepState_NumericVector();
  qs::c_qsave(probs,"/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/surv_est/inputs/probs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "probs values: "<< probs << std::endl;
  NumericVector newtimes  = RcppDeepState_NumericVector();
  qs::c_qsave(newtimes,"/home/akhila/fuzzer_packages/fuzzedpackages/obliqueRSF/inst/testfiles/surv_est/inputs/newtimes.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "newtimes values: "<< newtimes << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    surv_est(times,probs,newtimes);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
