// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cluster_BIC_DeepState_TestHarness_generation.cpp and cluster_BIC_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double cluster_BIC(arma::mat& data, arma::mat& centres);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream data_stream;
  arma::mat data  = RcppDeepState_mat();
  data_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/lowmemtkmeans/inst/testfiles/cluster_BIC/inputs/data");
  data_stream << data;
  std::cout << "data values: "<< data << std::endl;
  data_stream.close();
  std::ofstream centres_stream;
  arma::mat centres  = RcppDeepState_mat();
  centres_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/lowmemtkmeans/inst/testfiles/cluster_BIC/inputs/centres");
  centres_stream << centres;
  std::cout << "centres values: "<< centres << std::endl;
  centres_stream.close();
  std::cout << "input ends" << std::endl;
  try{
    cluster_BIC(data,centres);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
