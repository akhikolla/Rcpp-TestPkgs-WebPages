// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// run_TMcpp_DeepState_TestHarness_generation.cpp and run_TMcpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double run_TMcpp(double dt, double start, double end, NumericVector spike_times_1, NumericVector spike_times_2);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector dt(1);
  dt[0]  = RcppDeepState_double();
  std::string dt_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/run_TMcpp/libFuzzer_run_TMcpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_dt.qs";
  qs::c_qsave(dt,dt_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dt values: "<< dt << std::endl;
  NumericVector start(1);
  start[0]  = RcppDeepState_double();
  std::string start_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/run_TMcpp/libFuzzer_run_TMcpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_start.qs";
  qs::c_qsave(start,start_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "start values: "<< start << std::endl;
  NumericVector end(1);
  end[0]  = RcppDeepState_double();
  std::string end_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/run_TMcpp/libFuzzer_run_TMcpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_end.qs";
  qs::c_qsave(end,end_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "end values: "<< end << std::endl;
  NumericVector spike_times_1  = RcppDeepState_NumericVector();
  std::string spike_times_1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/run_TMcpp/libFuzzer_run_TMcpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_spike_times_1.qs";
  qs::c_qsave(spike_times_1,spike_times_1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "spike_times_1 values: "<< spike_times_1 << std::endl;
  NumericVector spike_times_2  = RcppDeepState_NumericVector();
  std::string spike_times_2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/run_TMcpp/libFuzzer_run_TMcpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_spike_times_2.qs";
  qs::c_qsave(spike_times_2,spike_times_2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "spike_times_2 values: "<< spike_times_2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    run_TMcpp(dt[0],start[0],end[0],spike_times_1,spike_times_2);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
