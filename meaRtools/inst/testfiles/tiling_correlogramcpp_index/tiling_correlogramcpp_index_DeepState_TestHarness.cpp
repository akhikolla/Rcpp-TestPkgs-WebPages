// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tiling_correlogramcpp_index_DeepState_TestHarness_generation.cpp and tiling_correlogramcpp_index_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector tiling_correlogramcpp_index(NumericVector spikes, int n, IntegerVector nspikes, IntegerVector first_spike, double start, double end, double dt, double tau_sep, double tau_max, int a, int b);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector spikes  = RcppDeepState_NumericVector();
  qs::c_qsave(spikes,"/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/tiling_correlogramcpp_index/inputs/spikes.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "spikes values: "<< spikes << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/tiling_correlogramcpp_index/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  IntegerVector nspikes  = RcppDeepState_IntegerVector();
  qs::c_qsave(nspikes,"/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/tiling_correlogramcpp_index/inputs/nspikes.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nspikes values: "<< nspikes << std::endl;
  IntegerVector first_spike  = RcppDeepState_IntegerVector();
  qs::c_qsave(first_spike,"/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/tiling_correlogramcpp_index/inputs/first_spike.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "first_spike values: "<< first_spike << std::endl;
  NumericVector start(1);
  start[0]  = RcppDeepState_double();
  qs::c_qsave(start,"/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/tiling_correlogramcpp_index/inputs/start.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "start values: "<< start << std::endl;
  NumericVector end(1);
  end[0]  = RcppDeepState_double();
  qs::c_qsave(end,"/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/tiling_correlogramcpp_index/inputs/end.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "end values: "<< end << std::endl;
  NumericVector dt(1);
  dt[0]  = RcppDeepState_double();
  qs::c_qsave(dt,"/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/tiling_correlogramcpp_index/inputs/dt.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dt values: "<< dt << std::endl;
  NumericVector tau_sep(1);
  tau_sep[0]  = RcppDeepState_double();
  qs::c_qsave(tau_sep,"/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/tiling_correlogramcpp_index/inputs/tau_sep.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau_sep values: "<< tau_sep << std::endl;
  NumericVector tau_max(1);
  tau_max[0]  = RcppDeepState_double();
  qs::c_qsave(tau_max,"/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/tiling_correlogramcpp_index/inputs/tau_max.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau_max values: "<< tau_max << std::endl;
  IntegerVector a(1);
  a[0]  = RcppDeepState_int();
  qs::c_qsave(a,"/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/tiling_correlogramcpp_index/inputs/a.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  IntegerVector b(1);
  b[0]  = RcppDeepState_int();
  qs::c_qsave(b,"/home/akhila/fuzzer_packages/fuzzedpackages/meaRtools/inst/testfiles/tiling_correlogramcpp_index/inputs/b.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b values: "<< b << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tiling_correlogramcpp_index(spikes,n[0],nspikes,first_spike,start[0],end[0],dt[0],tau_sep[0],tau_max[0],a[0],b[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
