// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// eval_t_DeepState_TestHarness_generation.cpp and eval_t_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::vec eval_t(const arma::mat& uev, const arma::mat& dat, const arma::mat& B);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  std::ofstream uev_stream;
  arma::mat uev  = RcppDeepState_mat();
  uev_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/kdecopula/inst/testfiles/eval_t/inputs/uev");
  uev_stream << uev;
  std::cout << "uev values: "<< uev << std::endl;
  uev_stream.close();
  std::ofstream dat_stream;
  arma::mat dat  = RcppDeepState_mat();
  dat_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/kdecopula/inst/testfiles/eval_t/inputs/dat");
  dat_stream << dat;
  std::cout << "dat values: "<< dat << std::endl;
  dat_stream.close();
  std::ofstream B_stream;
  arma::mat B  = RcppDeepState_mat();
  B_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/kdecopula/inst/testfiles/eval_t/inputs/B");
  B_stream << B;
  std::cout << "B values: "<< B << std::endl;
  B_stream.close();
  std::cout << "input ends" << std::endl;
  try{
    eval_t(uev,dat,B);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
