// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// SpEXP_DeepState_TestHarness_generation.cpp and SpEXP_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::mat SpEXP(double Rho, arma::mat const& SpDist, int M);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Rho(1);
  Rho[0]  = RcppDeepState_double();
  qs::c_qsave(Rho,"/home/akhila/fuzzer_packages/fuzzedpackages/spBFA/inst/testfiles/SpEXP/inputs/Rho.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Rho values: "<< Rho << std::endl;
  std::ofstream SpDist_stream;
  arma::mat SpDist  = RcppDeepState_mat();
  SpDist_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/spBFA/inst/testfiles/SpEXP/inputs/SpDist");
  SpDist_stream << SpDist;
  std::cout << "SpDist values: "<< SpDist << std::endl;
  SpDist_stream.close();
  IntegerVector M(1);
  M[0]  = RcppDeepState_int();
  qs::c_qsave(M,"/home/akhila/fuzzer_packages/fuzzedpackages/spBFA/inst/testfiles/SpEXP/inputs/M.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M values: "<< M << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    SpEXP(Rho[0],SpDist,M[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
