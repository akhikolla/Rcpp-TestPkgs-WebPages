// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// nodf_one_link_added_cpp_DeepState_TestHarness_generation.cpp and nodf_one_link_added_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double nodf_one_link_added_cpp(NumericMatrix mtx, int xpos, int ypos, NumericVector mt_0, NumericVector mt_t, NumericMatrix F0, NumericMatrix Ft, NumericMatrix DM0, NumericMatrix DMt, NumericMatrix ND0, NumericMatrix NDt, NumericVector S);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix mtx  = RcppDeepState_NumericMatrix();
  qs::c_qsave(mtx,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/mtx.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mtx values: "<< mtx << std::endl;
  IntegerVector xpos(1);
  xpos[0]  = RcppDeepState_int();
  qs::c_qsave(xpos,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/xpos.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xpos values: "<< xpos << std::endl;
  IntegerVector ypos(1);
  ypos[0]  = RcppDeepState_int();
  qs::c_qsave(ypos,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/ypos.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ypos values: "<< ypos << std::endl;
  NumericVector mt_0  = RcppDeepState_NumericVector();
  qs::c_qsave(mt_0,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/mt_0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mt_0 values: "<< mt_0 << std::endl;
  NumericVector mt_t  = RcppDeepState_NumericVector();
  qs::c_qsave(mt_t,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/mt_t.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mt_t values: "<< mt_t << std::endl;
  NumericMatrix F0  = RcppDeepState_NumericMatrix();
  qs::c_qsave(F0,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/F0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "F0 values: "<< F0 << std::endl;
  NumericMatrix Ft  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Ft,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/Ft.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ft values: "<< Ft << std::endl;
  NumericMatrix DM0  = RcppDeepState_NumericMatrix();
  qs::c_qsave(DM0,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/DM0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "DM0 values: "<< DM0 << std::endl;
  NumericMatrix DMt  = RcppDeepState_NumericMatrix();
  qs::c_qsave(DMt,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/DMt.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "DMt values: "<< DMt << std::endl;
  NumericMatrix ND0  = RcppDeepState_NumericMatrix();
  qs::c_qsave(ND0,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/ND0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ND0 values: "<< ND0 << std::endl;
  NumericMatrix NDt  = RcppDeepState_NumericMatrix();
  qs::c_qsave(NDt,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/NDt.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "NDt values: "<< NDt << std::endl;
  NumericVector S  = RcppDeepState_NumericVector();
  qs::c_qsave(S,"/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_added_cpp/inputs/S.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "S values: "<< S << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    nodf_one_link_added_cpp(mtx,xpos[0],ypos[0],mt_0,mt_t,F0,Ft,DM0,DMt,ND0,NDt,S);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
