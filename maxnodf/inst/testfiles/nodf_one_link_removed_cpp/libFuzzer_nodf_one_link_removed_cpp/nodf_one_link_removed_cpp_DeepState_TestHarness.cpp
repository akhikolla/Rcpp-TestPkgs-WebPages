// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// nodf_one_link_removed_cpp_DeepState_TestHarness_generation.cpp and nodf_one_link_removed_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double nodf_one_link_removed_cpp(NumericMatrix mtx, int xpos, int ypos, NumericVector mt_0, NumericVector mt_t, NumericMatrix F0, NumericMatrix Ft, NumericMatrix DM0, NumericMatrix DMt, NumericMatrix ND0, NumericMatrix NDt, NumericVector S);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix mtx  = RcppDeepState_NumericMatrix();
  std::string mtx_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mtx.qs";
  qs::c_qsave(mtx,mtx_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mtx values: "<< mtx << std::endl;
  IntegerVector xpos(1);
  xpos[0]  = RcppDeepState_int();
  std::string xpos_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xpos.qs";
  qs::c_qsave(xpos,xpos_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xpos values: "<< xpos << std::endl;
  IntegerVector ypos(1);
  ypos[0]  = RcppDeepState_int();
  std::string ypos_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ypos.qs";
  qs::c_qsave(ypos,ypos_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ypos values: "<< ypos << std::endl;
  NumericVector mt_0  = RcppDeepState_NumericVector();
  std::string mt_0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mt_0.qs";
  qs::c_qsave(mt_0,mt_0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mt_0 values: "<< mt_0 << std::endl;
  NumericVector mt_t  = RcppDeepState_NumericVector();
  std::string mt_t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mt_t.qs";
  qs::c_qsave(mt_t,mt_t_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mt_t values: "<< mt_t << std::endl;
  NumericMatrix F0  = RcppDeepState_NumericMatrix();
  std::string F0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_F0.qs";
  qs::c_qsave(F0,F0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "F0 values: "<< F0 << std::endl;
  NumericMatrix Ft  = RcppDeepState_NumericMatrix();
  std::string Ft_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Ft.qs";
  qs::c_qsave(Ft,Ft_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ft values: "<< Ft << std::endl;
  NumericMatrix DM0  = RcppDeepState_NumericMatrix();
  std::string DM0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_DM0.qs";
  qs::c_qsave(DM0,DM0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "DM0 values: "<< DM0 << std::endl;
  NumericMatrix DMt  = RcppDeepState_NumericMatrix();
  std::string DMt_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_DMt.qs";
  qs::c_qsave(DMt,DMt_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "DMt values: "<< DMt << std::endl;
  NumericMatrix ND0  = RcppDeepState_NumericMatrix();
  std::string ND0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ND0.qs";
  qs::c_qsave(ND0,ND0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ND0 values: "<< ND0 << std::endl;
  NumericMatrix NDt  = RcppDeepState_NumericMatrix();
  std::string NDt_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_NDt.qs";
  qs::c_qsave(NDt,NDt_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "NDt values: "<< NDt << std::endl;
  NumericVector S  = RcppDeepState_NumericVector();
  std::string S_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/nodf_one_link_removed_cpp/libFuzzer_nodf_one_link_removed_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_S.qs";
  qs::c_qsave(S,S_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "S values: "<< S << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    nodf_one_link_removed_cpp(mtx,xpos[0],ypos[0],mt_0,mt_t,F0,Ft,DM0,DMt,ND0,NDt,S);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
