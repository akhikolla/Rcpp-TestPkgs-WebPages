// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sim_anneal_opt_cpp_DeepState_TestHarness_generation.cpp and sim_anneal_opt_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix sim_anneal_opt_cpp(NumericMatrix mtx, double alpha, int iters, double init_temp, double min_temp);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix mtx  = RcppDeepState_NumericMatrix();
  std::string mtx_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/sim_anneal_opt_cpp/libFuzzer_sim_anneal_opt_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mtx.qs";
  qs::c_qsave(mtx,mtx_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mtx values: "<< mtx << std::endl;
  NumericVector alpha(1);
  alpha[0]  = RcppDeepState_double();
  std::string alpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/sim_anneal_opt_cpp/libFuzzer_sim_anneal_opt_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha.qs";
  qs::c_qsave(alpha,alpha_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  IntegerVector iters(1);
  iters[0]  = RcppDeepState_int();
  std::string iters_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/sim_anneal_opt_cpp/libFuzzer_sim_anneal_opt_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_iters.qs";
  qs::c_qsave(iters,iters_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "iters values: "<< iters << std::endl;
  NumericVector init_temp(1);
  init_temp[0]  = RcppDeepState_double();
  std::string init_temp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/sim_anneal_opt_cpp/libFuzzer_sim_anneal_opt_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_init_temp.qs";
  qs::c_qsave(init_temp,init_temp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "init_temp values: "<< init_temp << std::endl;
  NumericVector min_temp(1);
  min_temp[0]  = RcppDeepState_double();
  std::string min_temp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/maxnodf/inst/testfiles/sim_anneal_opt_cpp/libFuzzer_sim_anneal_opt_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_min_temp.qs";
  qs::c_qsave(min_temp,min_temp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "min_temp values: "<< min_temp << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sim_anneal_opt_cpp(mtx,alpha[0],iters[0],init_temp[0],min_temp[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
