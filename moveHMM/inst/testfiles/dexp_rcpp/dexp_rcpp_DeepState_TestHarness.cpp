// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// dexp_rcpp_DeepState_TestHarness_generation.cpp and dexp_rcpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::colvec dexp_rcpp(NumericVector x, double rate, double foo);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/moveHMM/inst/testfiles/dexp_rcpp/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector rate(1);
  rate[0]  = RcppDeepState_double();
  qs::c_qsave(rate,"/home/akhila/fuzzer_packages/fuzzedpackages/moveHMM/inst/testfiles/dexp_rcpp/inputs/rate.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rate values: "<< rate << std::endl;
  NumericVector foo(1);
  foo[0]  = RcppDeepState_double();
  qs::c_qsave(foo,"/home/akhila/fuzzer_packages/fuzzedpackages/moveHMM/inst/testfiles/dexp_rcpp/inputs/foo.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "foo values: "<< foo << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    dexp_rcpp(x,rate[0],foo[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
