// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// trMatrix_rcpp_DeepState_TestHarness_generation.cpp and trMatrix_rcpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::cube trMatrix_rcpp(int nbStates, arma::mat beta, arma::mat covs);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector nbStates(1);
  nbStates[0]  = RcppDeepState_int();
  std::string nbStates_t = "/home/akhila/fuzzer_packages/fuzzedpackages/moveHMM/inst/testfiles/trMatrix_rcpp/libFuzzer_trMatrix_rcpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nbStates.qs";
  qs::c_qsave(nbStates,nbStates_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nbStates values: "<< nbStates << std::endl;
  std::ofstream beta_stream;
  arma::mat beta  = RcppDeepState_mat();
  beta_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/moveHMM/inst/testfiles/trMatrix_rcpp/inputs/beta");
  beta_stream << beta;
  std::cout << "beta values: "<< beta << std::endl;
  beta_stream.close();
  std::ofstream covs_stream;
  arma::mat covs  = RcppDeepState_mat();
  covs_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/moveHMM/inst/testfiles/trMatrix_rcpp/inputs/covs");
  covs_stream << covs;
  std::cout << "covs values: "<< covs << std::endl;
  covs_stream.close();
  std::cout << "input ends" << std::endl;
  try{
    trMatrix_rcpp(nbStates[0],beta,covs);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
