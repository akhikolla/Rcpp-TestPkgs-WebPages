<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./solve_armadillo_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_output/1d2ddbac3d320fc26d245bb316a2d91e63b4e501.fail</line>
</preamble>

<pid>2458249</pid>
<ppid>2458248</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_output/log_1d2ddbac3d320fc26d245bb316a2d91e63b4e501/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./solve_armadillo_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_output/1d2ddbac3d320fc26d245bb316a2d91e63b4e501.fail</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.102 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:00:16.772 </time>
</status>

<error>
  <unique>0x9</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are definitely lost in loss record 10 of 1,287</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4D060F7</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RInside/lib/libRInside.so</obj>
      <fn>RInside::initialize(int, char const* const*, bool, bool, bool)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/RInside/src</dir>
      <file>RInside.cpp</file>
      <line>198</line>
    </frame>
    <frame>
      <ip>0x4D06483</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RInside/lib/libRInside.so</obj>
      <fn>RInside::RInside()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/RInside/src</dir>
      <file>RInside.cpp</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x4078E3</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x4078C8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x414618</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x4148B9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x414994</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4053D5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 29 of 1,287</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4E1D308</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E1EFB8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4E1F055</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E00331</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
    </frame>
    <frame>
      <ip>0x4E106D5</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::logic_error::logic_error(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4D202D1</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>void arma::arma_stop_logic_error&lt;char const*&gt;(char const* const&amp;)</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>debug.hpp</file>
      <line>144</line>
    </frame>
    <frame>
      <ip>0x4D2972E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>arma_check&lt;char [41]&gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>debug.hpp</file>
      <line>382</line>
    </frame>
    <frame>
      <ip>0x4D2972E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>inv_tr&lt;double, arma::Mat&lt;double&gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>auxlib_meat.hpp</file>
      <line>237</line>
    </frame>
    <frame>
      <ip>0x4D2972E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>bool arma::op_inv::apply_noalias&lt;double&gt;(arma::Mat&lt;double&gt;&amp;, arma::Mat&lt;double&gt; const&amp;)</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>op_inv_meat.hpp</file>
      <line>95</line>
    </frame>
    <frame>
      <ip>0x4D27482</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>apply&lt;arma::Mat&lt;double&gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>op_inv_meat.hpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x4D27482</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>Mat&lt;arma::Mat&lt;double&gt;, arma::op_inv&gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>Mat_meat.hpp</file>
      <line>4799</line>
    </frame>
    <frame>
      <ip>0x4D27482</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>solve_armadillo(arma::Mat&lt;double&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src</dir>
      <file>code.cpp</file>
      <line>9</line>
    </frame>
    <frame>
      <ip>0x407A26</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>24</line>
    </frame>
    <frame>
      <ip>0x4078C8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x414618</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>144 bytes in 1 blocks are possibly lost in loss record 48 of 1,287</text>
    <leakedbytes>144</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4DD82E3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>__cxa_allocate_exception</fn>
    </frame>
    <frame>
      <ip>0x4D202B2</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>void arma::arma_stop_logic_error&lt;char const*&gt;(char const* const&amp;)</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>debug.hpp</file>
      <line>144</line>
    </frame>
    <frame>
      <ip>0x4D2972E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>arma_check&lt;char [41]&gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>debug.hpp</file>
      <line>382</line>
    </frame>
    <frame>
      <ip>0x4D2972E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>inv_tr&lt;double, arma::Mat&lt;double&gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>auxlib_meat.hpp</file>
      <line>237</line>
    </frame>
    <frame>
      <ip>0x4D2972E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>bool arma::op_inv::apply_noalias&lt;double&gt;(arma::Mat&lt;double&gt;&amp;, arma::Mat&lt;double&gt; const&amp;)</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>op_inv_meat.hpp</file>
      <line>95</line>
    </frame>
    <frame>
      <ip>0x4D27482</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>apply&lt;arma::Mat&lt;double&gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>op_inv_meat.hpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x4D27482</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>Mat&lt;arma::Mat&lt;double&gt;, arma::op_inv&gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>Mat_meat.hpp</file>
      <line>4799</line>
    </frame>
    <frame>
      <ip>0x4D27482</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src/sfcr.so</obj>
      <fn>solve_armadillo(arma::Mat&lt;double&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/src</dir>
      <file>code.cpp</file>
      <line>9</line>
    </frame>
    <frame>
      <ip>0x407A26</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>24</line>
    </frame>
    <frame>
      <ip>0x4078C8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x414618</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x4148B9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x414994</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4053D5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>240 bytes in 1 blocks are definitely lost in loss record 78 of 1,287</text>
    <leakedbytes>240</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483E0F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>memalign</fn>
    </frame>
    <frame>
      <ip>0x483E212</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>posix_memalign</fn>
    </frame>
    <frame>
      <ip>0x40E005</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>double* arma::memory::acquire&lt;double&gt;(unsigned long long)</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits/memory.hpp</file>
      <line>73</line>
    </frame>
    <frame>
      <ip>0x40DE87</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>arma::Mat&lt;double&gt;::init_cold()</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits/Mat_meat.hpp</file>
      <line>225</line>
    </frame>
    <frame>
      <ip>0x40C7B9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>arma::Mat&lt;double&gt;::Mat(unsigned long long, unsigned long long)</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits/Mat_meat.hpp</file>
      <line>71</line>
    </frame>
    <frame>
      <ip>0x407517</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>RcppDeepState_mat()</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppDeepState/include/RcppDeepState.h</file>
      <line>214</line>
    </frame>
    <frame>
      <ip>0x407931</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>17</line>
    </frame>
    <frame>
      <ip>0x4078C8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x414618</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x4148B9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x414994</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4053D5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>240 bytes in 1 blocks are definitely lost in loss record 79 of 1,287</text>
    <leakedbytes>240</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483E0F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>memalign</fn>
    </frame>
    <frame>
      <ip>0x483E212</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>posix_memalign</fn>
    </frame>
    <frame>
      <ip>0x40E005</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>double* arma::memory::acquire&lt;double&gt;(unsigned long long)</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits/memory.hpp</file>
      <line>73</line>
    </frame>
    <frame>
      <ip>0x40DE87</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>arma::Mat&lt;double&gt;::init_cold()</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits/Mat_meat.hpp</file>
      <line>225</line>
    </frame>
    <frame>
      <ip>0x40CD3F</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>arma::Mat&lt;double&gt;::Mat(arma::Mat&lt;double&gt; const&amp;)</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits/Mat_meat.hpp</file>
      <line>790</line>
    </frame>
    <frame>
      <ip>0x407A0E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>24</line>
    </frame>
    <frame>
      <ip>0x4078C8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x414618</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x4148B9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x414994</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4053D5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xa3</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>1,025 bytes in 1 blocks are definitely lost in loss record 164 of 1,287</text>
    <leakedbytes>1025</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4E723AF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4D04C55</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RInside/lib/libRInside.so</obj>
      <fn>MemBuf::MemBuf(int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/RInside/src</dir>
      <file>MemBuf.cpp</file>
      <line>35</line>
    </frame>
    <frame>
      <ip>0x4D06467</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RInside/lib/libRInside.so</obj>
      <fn>RInside::RInside()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/RInside/src</dir>
      <file>RInside.cpp</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x4078E3</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x4078C8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo</dir>
      <file>solve_armadillo_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x414618</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x4148B9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x414994</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4053D5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/sfcr/inst/testfiles/solve_armadillo/solve_armadillo_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:17.794 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

