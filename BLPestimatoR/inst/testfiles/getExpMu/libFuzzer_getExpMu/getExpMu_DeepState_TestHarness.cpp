// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// getExpMu_DeepState_TestHarness_generation.cpp and getExpMu_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix getExpMu(const NumericMatrix& theta2Matrix, const NumericMatrix& qv, const NumericMatrix& Xrandom, const IntegerVector& cdid, const NumericMatrix& demographics);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix theta2Matrix  = RcppDeepState_NumericMatrix();
  std::string theta2Matrix_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BLPestimatoR/inst/testfiles/getExpMu/libFuzzer_getExpMu/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_theta2Matrix.qs";
  qs::c_qsave(theta2Matrix,theta2Matrix_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta2Matrix values: "<< theta2Matrix << std::endl;
  NumericMatrix qv  = RcppDeepState_NumericMatrix();
  std::string qv_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BLPestimatoR/inst/testfiles/getExpMu/libFuzzer_getExpMu/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_qv.qs";
  qs::c_qsave(qv,qv_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "qv values: "<< qv << std::endl;
  NumericMatrix Xrandom  = RcppDeepState_NumericMatrix();
  std::string Xrandom_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BLPestimatoR/inst/testfiles/getExpMu/libFuzzer_getExpMu/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Xrandom.qs";
  qs::c_qsave(Xrandom,Xrandom_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Xrandom values: "<< Xrandom << std::endl;
  IntegerVector cdid  = RcppDeepState_IntegerVector();
  std::string cdid_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BLPestimatoR/inst/testfiles/getExpMu/libFuzzer_getExpMu/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_cdid.qs";
  qs::c_qsave(cdid,cdid_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cdid values: "<< cdid << std::endl;
  NumericMatrix demographics  = RcppDeepState_NumericMatrix();
  std::string demographics_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BLPestimatoR/inst/testfiles/getExpMu/libFuzzer_getExpMu/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_demographics.qs";
  qs::c_qsave(demographics,demographics_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "demographics values: "<< demographics << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    getExpMu(theta2Matrix,qv,Xrandom,cdid,demographics);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
