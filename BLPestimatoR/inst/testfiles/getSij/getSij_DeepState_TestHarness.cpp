// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// getSij_DeepState_TestHarness_generation.cpp and getSij_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix getSij(const NumericMatrix& expmu, const NumericVector& expdelta, const IntegerVector& cdindex);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix expmu  = RcppDeepState_NumericMatrix();
  qs::c_qsave(expmu,"/home/akhila/fuzzer_packages/fuzzedpackages/BLPestimatoR/inst/testfiles/getSij/inputs/expmu.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "expmu values: "<< expmu << std::endl;
  NumericVector expdelta  = RcppDeepState_NumericVector();
  qs::c_qsave(expdelta,"/home/akhila/fuzzer_packages/fuzzedpackages/BLPestimatoR/inst/testfiles/getSij/inputs/expdelta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "expdelta values: "<< expdelta << std::endl;
  IntegerVector cdindex  = RcppDeepState_IntegerVector();
  qs::c_qsave(cdindex,"/home/akhila/fuzzer_packages/fuzzedpackages/BLPestimatoR/inst/testfiles/getSij/inputs/cdindex.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cdindex values: "<< cdindex << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    getSij(expmu,expdelta,cdindex);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
