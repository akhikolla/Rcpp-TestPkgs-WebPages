// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// nest2ring_DeepState_TestHarness_generation.cpp and nest2ring_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector nest2ring(int nside, IntegerVector pix);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector nside(1);
  nside[0]  = RcppDeepState_int();
  std::string nside_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rcosmo/inst/testfiles/nest2ring/libFuzzer_nest2ring/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nside.qs";
  qs::c_qsave(nside,nside_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nside values: "<< nside << std::endl;
  IntegerVector pix  = RcppDeepState_IntegerVector();
  std::string pix_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rcosmo/inst/testfiles/nest2ring/libFuzzer_nest2ring/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pix.qs";
  qs::c_qsave(pix,pix_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pix values: "<< pix << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    nest2ring(nside[0],pix);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
