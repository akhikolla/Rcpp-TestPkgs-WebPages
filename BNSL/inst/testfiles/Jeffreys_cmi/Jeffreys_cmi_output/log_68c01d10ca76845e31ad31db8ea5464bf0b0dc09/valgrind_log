<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./Jeffreys_cmi_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_output/68c01d10ca76845e31ad31db8ea5464bf0b0dc09.pass</line>
</preamble>

<pid>2970820</pid>
<ppid>2970819</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_output/log_68c01d10ca76845e31ad31db8ea5464bf0b0dc09/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./Jeffreys_cmi_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_output/68c01d10ca76845e31ad31db8ea5464bf0b0dc09.pass</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.046 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D4EABF</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/src/BNSL.so</obj>
      <fn>operator[]</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/operators</dir>
      <file>times.h</file>
      <line>273</line>
    </frame>
    <frame>
      <ip>0x4D4EABF</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/src/BNSL.so</obj>
      <fn>operator[]</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/operators</dir>
      <file>plus.h</file>
      <line>72</line>
    </frame>
    <frame>
      <ip>0x4D4EABF</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/src/BNSL.so</obj>
      <fn>operator[]</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/operators</dir>
      <file>plus.h</file>
      <line>72</line>
    </frame>
    <frame>
      <ip>0x4D4EABF</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/src/BNSL.so</obj>
      <fn>operator*</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>VectorBase.h</file>
      <line>126</line>
    </frame>
    <frame>
      <ip>0x4D4EABF</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/src/BNSL.so</obj>
      <fn>for_each&lt;Rcpp::VectorBase&lt;14, true, Rcpp::sugar::Plus_Vector_Vector&lt;14, true, Rcpp::sugar::Plus_Vector_Vector&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, true, Rcpp::sugar::Times_Vector_Primitive&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;, true, Rcpp::sugar::Times_Vector_Primitive&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt; &gt;::iter_base&lt;Rcpp::VectorBase&lt;14, true, Rcpp::sugar::Plus_Vector_Vector&lt;14, true, Rcpp::sugar::Plus_Vector_Vector&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, true, Rcpp::sugar::Times_Vector_Primitive&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;, true, Rcpp::sugar::Times_Vector_Primitive&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt; &gt;::const_iter_traits&gt;, Rcpp::sugar::CountInserter&lt;std::unordered_map&lt;double, int, std::hash&lt;double&gt;, std::equal_to&lt;double&gt;, std::allocator&lt;std::pair&lt;double const, int&gt; &gt; &gt;, double&gt; &gt;</fn>
      <dir>/usr/include/c++/9/bits</dir>
      <file>stl_algo.h</file>
      <line>3876</line>
    </frame>
    <frame>
      <ip>0x4D4EABF</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/src/BNSL.so</obj>
      <fn>Table</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/functions</dir>
      <file>table.h</file>
      <line>95</line>
    </frame>
    <frame>
      <ip>0x4D4EABF</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/src/BNSL.so</obj>
      <fn>Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt; Rcpp::table&lt;14, true, Rcpp::sugar::Plus_Vector_Vector&lt;14, true, Rcpp::sugar::Plus_Vector_Vector&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, true, Rcpp::sugar::Times_Vector_Primitive&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;, true, Rcpp::sugar::Times_Vector_Primitive&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt; &gt;(Rcpp::VectorBase&lt;14, true, Rcpp::sugar::Plus_Vector_Vector&lt;14, true, Rcpp::sugar::Plus_Vector_Vector&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, true, Rcpp::sugar::Times_Vector_Primitive&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;, true, Rcpp::sugar::Times_Vector_Primitive&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/functions</dir>
      <file>table.h</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x4D4771C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/src/BNSL.so</obj>
      <fn>Jeffreys_cmi(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, int, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/src</dir>
      <file>mi_cmi.cpp</file>
      <line>102</line>
    </frame>
    <frame>
      <ip>0x40A733</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi</dir>
      <file>Jeffreys_cmi_DeepState_TestHarness.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi</dir>
      <file>Jeffreys_cmi_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D8F8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41DB99</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DC74</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xa184a00 is 0 bytes after a block of size 256 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D5CB3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x40FBDD</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;::Vector(int const&amp;)</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector/Vector.h</file>
      <line>130</line>
    </frame>
    <frame>
      <ip>0x407D75</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>RcppDeepState_NumericVector()</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppDeepState/include/RcppDeepState.h</file>
      <line>43</line>
    </frame>
    <frame>
      <ip>0x409D34</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi</dir>
      <file>Jeffreys_cmi_DeepState_TestHarness.cpp</file>
      <line>20</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi</dir>
      <file>Jeffreys_cmi_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D8F8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41DB99</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DC74</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/BNSL/inst/testfiles/Jeffreys_cmi/Jeffreys_cmi_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:14.747 </time>
</status>

<errorcounts>
  <pair>
    <count>16</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:15.762 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

