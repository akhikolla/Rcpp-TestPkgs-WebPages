// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// geom_weight_DeepState_TestHarness_generation.cpp and geom_weight_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector geom_weight(const NumericVector& pvalues, const NumericVector& weights);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector pvalues  = RcppDeepState_NumericVector();
  std::string pvalues_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FDX/inst/testfiles/geom_weight/libFuzzer_geom_weight/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pvalues.qs";
  qs::c_qsave(pvalues,pvalues_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pvalues values: "<< pvalues << std::endl;
  NumericVector weights  = RcppDeepState_NumericVector();
  std::string weights_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FDX/inst/testfiles/geom_weight/libFuzzer_geom_weight/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_weights.qs";
  qs::c_qsave(weights,weights_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "weights values: "<< weights << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    geom_weight(pvalues,weights);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
