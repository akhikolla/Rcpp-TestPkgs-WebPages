// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// gaussianLocalDensity_DeepState_TestHarness_generation.cpp and gaussianLocalDensity_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector gaussianLocalDensity(NumericVector distance, int nrow, double dc);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector distance  = RcppDeepState_NumericVector();
  qs::c_qsave(distance,"/home/akhila/fuzzer_packages/fuzzedpackages/densityClust/inst/testfiles/gaussianLocalDensity/inputs/distance.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "distance values: "<< distance << std::endl;
  IntegerVector nrow(1);
  nrow[0]  = RcppDeepState_int();
  qs::c_qsave(nrow,"/home/akhila/fuzzer_packages/fuzzedpackages/densityClust/inst/testfiles/gaussianLocalDensity/inputs/nrow.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nrow values: "<< nrow << std::endl;
  NumericVector dc(1);
  dc[0]  = RcppDeepState_double();
  qs::c_qsave(dc,"/home/akhila/fuzzer_packages/fuzzedpackages/densityClust/inst/testfiles/gaussianLocalDensity/inputs/dc.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dc values: "<< dc << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    gaussianLocalDensity(distance,nrow[0],dc[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
