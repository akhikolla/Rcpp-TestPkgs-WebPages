// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// vExpec_covariates_DeepState_TestHarness_generation.cpp and vExpec_covariates_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double vExpec_covariates(Rcpp::NumericMatrix Y, Rcpp::NumericMatrix roundProd, Rcpp::NumericMatrix gamma, Rcpp::NumericMatrix Tau, Rcpp::NumericVector pi);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix Y  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Y,"/home/akhila/fuzzer_packages/fuzzedpackages/missSBM/inst/testfiles/vExpec_covariates/inputs/Y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y values: "<< Y << std::endl;
  NumericMatrix roundProd  = RcppDeepState_NumericMatrix();
  qs::c_qsave(roundProd,"/home/akhila/fuzzer_packages/fuzzedpackages/missSBM/inst/testfiles/vExpec_covariates/inputs/roundProd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "roundProd values: "<< roundProd << std::endl;
  NumericMatrix gamma  = RcppDeepState_NumericMatrix();
  qs::c_qsave(gamma,"/home/akhila/fuzzer_packages/fuzzedpackages/missSBM/inst/testfiles/vExpec_covariates/inputs/gamma.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gamma values: "<< gamma << std::endl;
  NumericMatrix Tau  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Tau,"/home/akhila/fuzzer_packages/fuzzedpackages/missSBM/inst/testfiles/vExpec_covariates/inputs/Tau.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Tau values: "<< Tau << std::endl;
  NumericVector pi  = RcppDeepState_NumericVector();
  qs::c_qsave(pi,"/home/akhila/fuzzer_packages/fuzzedpackages/missSBM/inst/testfiles/vExpec_covariates/inputs/pi.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pi values: "<< pi << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    vExpec_covariates(Y,roundProd,gamma,Tau,pi);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
