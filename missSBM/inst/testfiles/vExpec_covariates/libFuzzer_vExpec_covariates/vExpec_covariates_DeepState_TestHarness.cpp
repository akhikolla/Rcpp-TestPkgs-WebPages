// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// vExpec_covariates_DeepState_TestHarness_generation.cpp and vExpec_covariates_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double vExpec_covariates(Rcpp::NumericMatrix Y, Rcpp::NumericMatrix roundProd, Rcpp::NumericMatrix gamma, Rcpp::NumericMatrix Tau, Rcpp::NumericVector pi);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix Y  = RcppDeepState_NumericMatrix();
  std::string Y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/missSBM/inst/testfiles/vExpec_covariates/libFuzzer_vExpec_covariates/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Y.qs";
  qs::c_qsave(Y,Y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y values: "<< Y << std::endl;
  NumericMatrix roundProd  = RcppDeepState_NumericMatrix();
  std::string roundProd_t = "/home/akhila/fuzzer_packages/fuzzedpackages/missSBM/inst/testfiles/vExpec_covariates/libFuzzer_vExpec_covariates/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_roundProd.qs";
  qs::c_qsave(roundProd,roundProd_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "roundProd values: "<< roundProd << std::endl;
  NumericMatrix gamma  = RcppDeepState_NumericMatrix();
  std::string gamma_t = "/home/akhila/fuzzer_packages/fuzzedpackages/missSBM/inst/testfiles/vExpec_covariates/libFuzzer_vExpec_covariates/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_gamma.qs";
  qs::c_qsave(gamma,gamma_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gamma values: "<< gamma << std::endl;
  NumericMatrix Tau  = RcppDeepState_NumericMatrix();
  std::string Tau_t = "/home/akhila/fuzzer_packages/fuzzedpackages/missSBM/inst/testfiles/vExpec_covariates/libFuzzer_vExpec_covariates/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Tau.qs";
  qs::c_qsave(Tau,Tau_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Tau values: "<< Tau << std::endl;
  NumericVector pi  = RcppDeepState_NumericVector();
  std::string pi_t = "/home/akhila/fuzzer_packages/fuzzedpackages/missSBM/inst/testfiles/vExpec_covariates/libFuzzer_vExpec_covariates/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pi.qs";
  qs::c_qsave(pi,pi_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pi values: "<< pi << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    vExpec_covariates(Y,roundProd,gamma,Tau,pi);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
