// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// QFnc_DeepState_TestHarness_generation.cpp and QFnc_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::mat QFnc(arma::mat const& WAlpha, arma::mat const& EyeM, double Rho, int M);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream WAlpha_stream;
  arma::mat WAlpha  = RcppDeepState_mat();
  WAlpha_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/spCP/inst/testfiles/QFnc/inputs/WAlpha");
  WAlpha_stream << WAlpha;
  std::cout << "WAlpha values: "<< WAlpha << std::endl;
  WAlpha_stream.close();
  std::ofstream EyeM_stream;
  arma::mat EyeM  = RcppDeepState_mat();
  EyeM_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/spCP/inst/testfiles/QFnc/inputs/EyeM");
  EyeM_stream << EyeM;
  std::cout << "EyeM values: "<< EyeM << std::endl;
  EyeM_stream.close();
  NumericVector Rho(1);
  Rho[0]  = RcppDeepState_double();
  std::string Rho_t = "/home/akhila/fuzzer_packages/fuzzedpackages/spCP/inst/testfiles/QFnc/libFuzzer_QFnc/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Rho.qs";
  qs::c_qsave(Rho,Rho_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Rho values: "<< Rho << std::endl;
  IntegerVector M(1);
  M[0]  = RcppDeepState_int();
  std::string M_t = "/home/akhila/fuzzer_packages/fuzzedpackages/spCP/inst/testfiles/QFnc/libFuzzer_QFnc/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_M.qs";
  qs::c_qsave(M,M_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M values: "<< M << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    QFnc(WAlpha,EyeM,Rho[0],M[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
