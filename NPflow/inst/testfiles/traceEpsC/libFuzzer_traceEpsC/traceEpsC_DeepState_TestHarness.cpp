// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// traceEpsC_DeepState_TestHarness_generation.cpp and traceEpsC_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector traceEpsC(const arma::mat& eps, const arma::mat& sigma);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream eps_stream;
  arma::mat eps  = RcppDeepState_mat();
  eps_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/NPflow/inst/testfiles/traceEpsC/inputs/eps");
  eps_stream << eps;
  std::cout << "eps values: "<< eps << std::endl;
  eps_stream.close();
  std::ofstream sigma_stream;
  arma::mat sigma  = RcppDeepState_mat();
  sigma_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/NPflow/inst/testfiles/traceEpsC/inputs/sigma");
  sigma_stream << sigma;
  std::cout << "sigma values: "<< sigma << std::endl;
  sigma_stream.close();
  std::cout << "input ends" << std::endl;
  try{
    traceEpsC(eps,sigma);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
