// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// get_freq2_DeepState_TestHarness_generation.cpp and get_freq2_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector get_freq2(NumericVector x, NumericVector CAL_bins, int outlen);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MSEtool/inst/testfiles/get_freq2/libFuzzer_get_freq2/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector CAL_bins  = RcppDeepState_NumericVector();
  std::string CAL_bins_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MSEtool/inst/testfiles/get_freq2/libFuzzer_get_freq2/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_CAL_bins.qs";
  qs::c_qsave(CAL_bins,CAL_bins_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "CAL_bins values: "<< CAL_bins << std::endl;
  IntegerVector outlen(1);
  outlen[0]  = RcppDeepState_int();
  std::string outlen_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MSEtool/inst/testfiles/get_freq2/libFuzzer_get_freq2/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_outlen.qs";
  qs::c_qsave(outlen,outlen_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "outlen values: "<< outlen << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    get_freq2(x,CAL_bins,outlen[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
