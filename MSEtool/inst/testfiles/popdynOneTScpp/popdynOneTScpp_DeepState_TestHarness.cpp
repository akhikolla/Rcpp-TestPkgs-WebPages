// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// popdynOneTScpp_DeepState_TestHarness_generation.cpp and popdynOneTScpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::mat popdynOneTScpp(double nareas, double maxage, NumericMatrix Ncurr, Rcpp::NumericMatrix Zcurr, int plusgroup);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector nareas(1);
  nareas[0]  = RcppDeepState_double();
  qs::c_qsave(nareas,"/home/akhila/fuzzer_packages/fuzzedpackages/MSEtool/inst/testfiles/popdynOneTScpp/inputs/nareas.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nareas values: "<< nareas << std::endl;
  NumericVector maxage(1);
  maxage[0]  = RcppDeepState_double();
  qs::c_qsave(maxage,"/home/akhila/fuzzer_packages/fuzzedpackages/MSEtool/inst/testfiles/popdynOneTScpp/inputs/maxage.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxage values: "<< maxage << std::endl;
  NumericMatrix Ncurr  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Ncurr,"/home/akhila/fuzzer_packages/fuzzedpackages/MSEtool/inst/testfiles/popdynOneTScpp/inputs/Ncurr.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ncurr values: "<< Ncurr << std::endl;
  NumericMatrix Zcurr  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Zcurr,"/home/akhila/fuzzer_packages/fuzzedpackages/MSEtool/inst/testfiles/popdynOneTScpp/inputs/Zcurr.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Zcurr values: "<< Zcurr << std::endl;
  IntegerVector plusgroup(1);
  plusgroup[0]  = RcppDeepState_int();
  qs::c_qsave(plusgroup,"/home/akhila/fuzzer_packages/fuzzedpackages/MSEtool/inst/testfiles/popdynOneTScpp/inputs/plusgroup.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "plusgroup values: "<< plusgroup << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    popdynOneTScpp(nareas[0],maxage[0],Ncurr,Zcurr,plusgroup[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
