// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// profileloglik_DeepState_TestHarness_generation.cpp and profileloglik_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List profileloglik(arma::mat Sigma, arma::mat S, int N);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream Sigma_stream;
  arma::mat Sigma  = RcppDeepState_mat();
  Sigma_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/mixggm/inst/testfiles/profileloglik/inputs/Sigma");
  Sigma_stream << Sigma;
  std::cout << "Sigma values: "<< Sigma << std::endl;
  Sigma_stream.close();
  std::ofstream S_stream;
  arma::mat S  = RcppDeepState_mat();
  S_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/mixggm/inst/testfiles/profileloglik/inputs/S");
  S_stream << S;
  std::cout << "S values: "<< S << std::endl;
  S_stream.close();
  IntegerVector N(1);
  N[0]  = RcppDeepState_int();
  std::string N_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mixggm/inst/testfiles/profileloglik/libFuzzer_profileloglik/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_N.qs";
  qs::c_qsave(N,N_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    profileloglik(Sigma,S,N[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
