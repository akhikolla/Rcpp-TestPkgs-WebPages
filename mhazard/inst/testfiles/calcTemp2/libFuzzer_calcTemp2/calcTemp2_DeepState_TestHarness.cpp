// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// calcTemp2_DeepState_TestHarness_generation.cpp and calcTemp2_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::cube calcTemp2(NumericMatrix Fhat, NumericMatrix Lambda10, NumericMatrix Lambda01, NumericMatrix Lambda11);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix Fhat  = RcppDeepState_NumericMatrix();
  std::string Fhat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/calcTemp2/libFuzzer_calcTemp2/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Fhat.qs";
  qs::c_qsave(Fhat,Fhat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Fhat values: "<< Fhat << std::endl;
  NumericMatrix Lambda10  = RcppDeepState_NumericMatrix();
  std::string Lambda10_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/calcTemp2/libFuzzer_calcTemp2/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Lambda10.qs";
  qs::c_qsave(Lambda10,Lambda10_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Lambda10 values: "<< Lambda10 << std::endl;
  NumericMatrix Lambda01  = RcppDeepState_NumericMatrix();
  std::string Lambda01_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/calcTemp2/libFuzzer_calcTemp2/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Lambda01.qs";
  qs::c_qsave(Lambda01,Lambda01_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Lambda01 values: "<< Lambda01 << std::endl;
  NumericMatrix Lambda11  = RcppDeepState_NumericMatrix();
  std::string Lambda11_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/calcTemp2/libFuzzer_calcTemp2/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Lambda11.qs";
  qs::c_qsave(Lambda11,Lambda11_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Lambda11 values: "<< Lambda11 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    calcTemp2(Fhat,Lambda10,Lambda01,Lambda11);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
