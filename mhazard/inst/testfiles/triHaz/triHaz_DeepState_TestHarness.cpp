// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// triHaz_DeepState_TestHarness_generation.cpp and triHaz_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::cube triHaz(NumericVector Y1, NumericVector Y2, NumericVector Y3, NumericVector T1, NumericVector T2, NumericVector T3, NumericVector Delta1, NumericVector Delta2, NumericVector Delta3);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Y1  = RcppDeepState_NumericVector();
  qs::c_qsave(Y1,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/triHaz/inputs/Y1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y1 values: "<< Y1 << std::endl;
  NumericVector Y2  = RcppDeepState_NumericVector();
  qs::c_qsave(Y2,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/triHaz/inputs/Y2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y2 values: "<< Y2 << std::endl;
  NumericVector Y3  = RcppDeepState_NumericVector();
  qs::c_qsave(Y3,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/triHaz/inputs/Y3.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y3 values: "<< Y3 << std::endl;
  NumericVector T1  = RcppDeepState_NumericVector();
  qs::c_qsave(T1,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/triHaz/inputs/T1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T1 values: "<< T1 << std::endl;
  NumericVector T2  = RcppDeepState_NumericVector();
  qs::c_qsave(T2,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/triHaz/inputs/T2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T2 values: "<< T2 << std::endl;
  NumericVector T3  = RcppDeepState_NumericVector();
  qs::c_qsave(T3,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/triHaz/inputs/T3.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T3 values: "<< T3 << std::endl;
  NumericVector Delta1  = RcppDeepState_NumericVector();
  qs::c_qsave(Delta1,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/triHaz/inputs/Delta1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Delta1 values: "<< Delta1 << std::endl;
  NumericVector Delta2  = RcppDeepState_NumericVector();
  qs::c_qsave(Delta2,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/triHaz/inputs/Delta2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Delta2 values: "<< Delta2 << std::endl;
  NumericVector Delta3  = RcppDeepState_NumericVector();
  qs::c_qsave(Delta3,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/triHaz/inputs/Delta3.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Delta3 values: "<< Delta3 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    triHaz(Y1,Y2,Y3,T1,T2,T3,Delta1,Delta2,Delta3);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
