// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// margHaz_DeepState_TestHarness_generation.cpp and margHaz_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector margHaz(NumericVector Y, NumericVector T, NumericVector Delta);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector Y  = RcppDeepState_NumericVector();
  std::string Y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/margHaz/libFuzzer_margHaz/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Y.qs";
  qs::c_qsave(Y,Y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y values: "<< Y << std::endl;
  NumericVector T  = RcppDeepState_NumericVector();
  std::string T_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/margHaz/libFuzzer_margHaz/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_T.qs";
  qs::c_qsave(T,T_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T values: "<< T << std::endl;
  NumericVector Delta  = RcppDeepState_NumericVector();
  std::string Delta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/margHaz/libFuzzer_margHaz/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Delta.qs";
  qs::c_qsave(Delta,Delta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Delta values: "<< Delta << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    margHaz(Y,T,Delta);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
