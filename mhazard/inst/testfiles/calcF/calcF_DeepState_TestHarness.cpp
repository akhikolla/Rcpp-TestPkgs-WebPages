// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// calcF_DeepState_TestHarness_generation.cpp and calcF_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix calcF(NumericVector lambda10, NumericVector lambda01, NumericMatrix lambda11);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector lambda10  = RcppDeepState_NumericVector();
  qs::c_qsave(lambda10,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/calcF/inputs/lambda10.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda10 values: "<< lambda10 << std::endl;
  NumericVector lambda01  = RcppDeepState_NumericVector();
  qs::c_qsave(lambda01,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/calcF/inputs/lambda01.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda01 values: "<< lambda01 << std::endl;
  NumericMatrix lambda11  = RcppDeepState_NumericMatrix();
  qs::c_qsave(lambda11,"/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/calcF/inputs/lambda11.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda11 values: "<< lambda11 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    calcF(lambda10,lambda01,lambda11);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
