<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./jointHazLambda_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_output/b1bacdf92ac7d48548febdb258f5059b646325c4.pass</line>
</preamble>

<pid>2376889</pid>
<ppid>2376887</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_output/log_b1bacdf92ac7d48548febdb258f5059b646325c4/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./jointHazLambda_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_output/b1bacdf92ac7d48548febdb258f5059b646325c4.pass</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.067 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D30A22</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src/mhazard.so</obj>
      <fn>calc_dij(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src</dir>
      <file>mkm.cpp</file>
      <line>44</line>
    </frame>
    <frame>
      <ip>0x4D34762</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src/mhazard.so</obj>
      <fn>jointHazLambda(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src</dir>
      <file>mkm.cpp</file>
      <line>143</line>
    </frame>
    <frame>
      <ip>0x40A84E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x409B68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DD38</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41DFD9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E0B4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407675</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x8c4bbe0 is 0 bytes after a block of size 256 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D5CB3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x40FDFD</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;::Vector(int const&amp;)</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector/Vector.h</file>
      <line>130</line>
    </frame>
    <frame>
      <ip>0x407D85</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>RcppDeepState_NumericVector()</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppDeepState/include/RcppDeepState.h</file>
      <line>43</line>
    </frame>
    <frame>
      <ip>0x409D44</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>20</line>
    </frame>
    <frame>
      <ip>0x409B68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DD38</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41DFD9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E0B4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407675</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D30A4E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src/mhazard.so</obj>
      <fn>calc_dij(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src</dir>
      <file>mkm.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x4D34762</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src/mhazard.so</obj>
      <fn>jointHazLambda(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src</dir>
      <file>mkm.cpp</file>
      <line>143</line>
    </frame>
    <frame>
      <ip>0x40A84E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x409B68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DD38</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41DFD9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E0B4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407675</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x8c4bbe0 is 0 bytes after a block of size 256 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D5CB3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x40FDFD</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;::Vector(int const&amp;)</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector/Vector.h</file>
      <line>130</line>
    </frame>
    <frame>
      <ip>0x407D85</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>RcppDeepState_NumericVector()</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppDeepState/include/RcppDeepState.h</file>
      <line>43</line>
    </frame>
    <frame>
      <ip>0x409D44</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>20</line>
    </frame>
    <frame>
      <ip>0x409B68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DD38</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41DFD9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E0B4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407675</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x30</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D309C8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src/mhazard.so</obj>
      <fn>calc_dij(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;&amp;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src</dir>
      <file>mkm.cpp</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x4D34762</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src/mhazard.so</obj>
      <fn>jointHazLambda(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src</dir>
      <file>mkm.cpp</file>
      <line>143</line>
    </frame>
    <frame>
      <ip>0x40A84E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x409B68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DD38</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41DFD9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E0B4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407675</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xa6f8650 is 16 bytes before a block of size 320 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D5CB3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x499EC11</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>R_bcEncode</fn>
    </frame>
    <frame>
      <ip>0x4A378C2</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A364BA</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A3657A</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A37941</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A364BA</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A35EE4</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A37D31</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>R_Unserialize</fn>
    </frame>
    <frame>
      <ip>0x4A391BC</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A395DA</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0xeb8</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4178A9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>arma::Cube&lt;double&gt;::delete_mat()</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits/Cube_meat.hpp</file>
      <line>417</line>
    </frame>
    <frame>
      <ip>0x410EEB</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>arma::Cube&lt;double&gt;::~Cube()</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits/Cube_meat.hpp</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x40A85F</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x409B68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DD38</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41DFD9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E0B4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407675</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:15.029 </time>
</status>

<error>
  <unique>0x119c</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>8,704 bytes in 1 blocks are definitely lost in loss record 740 of 1,333</text>
    <leakedbytes>8704</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483E0F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>memalign</fn>
    </frame>
    <frame>
      <ip>0x483E212</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>posix_memalign</fn>
    </frame>
    <frame>
      <ip>0x4D35312</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src/mhazard.so</obj>
      <fn>acquire&lt;double&gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>memory.hpp</file>
      <line>73</line>
    </frame>
    <frame>
      <ip>0x4D35312</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src/mhazard.so</obj>
      <fn>init_cold</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>Cube_meat.hpp</file>
      <line>233</line>
    </frame>
    <frame>
      <ip>0x4D35312</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src/mhazard.so</obj>
      <fn>Cube</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>Cube_meat.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x4D35312</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src/mhazard.so</obj>
      <fn>jointHazLambda(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/src</dir>
      <file>mkm.cpp</file>
      <line>121</line>
    </frame>
    <frame>
      <ip>0x40A84E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x409B68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda</dir>
      <file>jointHazLambda_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DD38</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41DFD9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E0B4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407675</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/jointHazLambda_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0xeb8</unique>
  </pair>
  <pair>
    <count>2720</count>
    <unique>0x0</unique>
  </pair>
  <pair>
    <count>136</count>
    <unique>0x30</unique>
  </pair>
  <pair>
    <count>912</count>
    <unique>0x1</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:16.023 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

