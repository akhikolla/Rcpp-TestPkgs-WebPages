// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// jointHazLambda_DeepState_TestHarness_generation.cpp and jointHazLambda_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::cube jointHazLambda(NumericVector Y1, NumericVector Y2, NumericVector T1, NumericVector T2, NumericVector Delta1, NumericVector Delta2, int method);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector Y1  = RcppDeepState_NumericVector();
  std::string Y1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/libFuzzer_jointHazLambda/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Y1.qs";
  qs::c_qsave(Y1,Y1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y1 values: "<< Y1 << std::endl;
  NumericVector Y2  = RcppDeepState_NumericVector();
  std::string Y2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/libFuzzer_jointHazLambda/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Y2.qs";
  qs::c_qsave(Y2,Y2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y2 values: "<< Y2 << std::endl;
  NumericVector T1  = RcppDeepState_NumericVector();
  std::string T1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/libFuzzer_jointHazLambda/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_T1.qs";
  qs::c_qsave(T1,T1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T1 values: "<< T1 << std::endl;
  NumericVector T2  = RcppDeepState_NumericVector();
  std::string T2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/libFuzzer_jointHazLambda/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_T2.qs";
  qs::c_qsave(T2,T2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T2 values: "<< T2 << std::endl;
  NumericVector Delta1  = RcppDeepState_NumericVector();
  std::string Delta1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/libFuzzer_jointHazLambda/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Delta1.qs";
  qs::c_qsave(Delta1,Delta1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Delta1 values: "<< Delta1 << std::endl;
  NumericVector Delta2  = RcppDeepState_NumericVector();
  std::string Delta2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/libFuzzer_jointHazLambda/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Delta2.qs";
  qs::c_qsave(Delta2,Delta2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Delta2 values: "<< Delta2 << std::endl;
  IntegerVector method(1);
  method[0]  = RcppDeepState_int();
  std::string method_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mhazard/inst/testfiles/jointHazLambda/libFuzzer_jointHazLambda/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_method.qs";
  qs::c_qsave(method,method_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "method values: "<< method << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    jointHazLambda(Y1,Y2,T1,T2,Delta1,Delta2,method[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
