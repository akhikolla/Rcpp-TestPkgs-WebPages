// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// k_mat_ring_DeepState_TestHarness_generation.cpp and k_mat_ring_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::mat k_mat_ring(const arma::mat& coords, const double& h1, const double& h2);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  std::ofstream coords_stream;
  arma::mat coords  = RcppDeepState_mat();
  coords_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/SpatialBSS/inst/testfiles/k_mat_ring/inputs/coords");
  coords_stream << coords;
  std::cout << "coords values: "<< coords << std::endl;
  coords_stream.close();
  NumericVector h1(1);
  h1[0]  = RcppDeepState_double();
  qs::c_qsave(h1,"/home/akhila/fuzzer_packages/fuzzedpackages/SpatialBSS/inst/testfiles/k_mat_ring/inputs/h1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h1 values: "<< h1 << std::endl;
  NumericVector h2(1);
  h2[0]  = RcppDeepState_double();
  qs::c_qsave(h2,"/home/akhila/fuzzer_packages/fuzzedpackages/SpatialBSS/inst/testfiles/k_mat_ring/inputs/h2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h2 values: "<< h2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    k_mat_ring(coords,h1[0],h2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
