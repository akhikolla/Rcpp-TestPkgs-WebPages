// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// StrPBR_BT_In_DeepState_TestHarness_generation.cpp and StrPBR_BT_In_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double StrPBR_BT_In(arma::mat data, double B, int bsize);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream data_stream;
  arma::mat data  = RcppDeepState_mat();
  data_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/carat/inst/testfiles/StrPBR_BT_In/inputs/data");
  data_stream << data;
  std::cout << "data values: "<< data << std::endl;
  data_stream.close();
  NumericVector B(1);
  B[0]  = RcppDeepState_double();
  std::string B_t = "/home/akhila/fuzzer_packages/fuzzedpackages/carat/inst/testfiles/StrPBR_BT_In/libFuzzer_StrPBR_BT_In/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_B.qs";
  qs::c_qsave(B,B_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "B values: "<< B << std::endl;
  IntegerVector bsize(1);
  bsize[0]  = RcppDeepState_int();
  std::string bsize_t = "/home/akhila/fuzzer_packages/fuzzedpackages/carat/inst/testfiles/StrPBR_BT_In/libFuzzer_StrPBR_BT_In/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_bsize.qs";
  qs::c_qsave(bsize,bsize_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "bsize values: "<< bsize << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    StrPBR_BT_In(data,B[0],bsize[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
