// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// reduce_markers_DeepState_TestHarness_generation.cpp and reduce_markers_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector reduce_markers(const NumericVector& pos, const double min_dist, const NumericVector& weights);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector pos  = RcppDeepState_NumericVector();
  std::string pos_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/reduce_markers/libFuzzer_reduce_markers/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pos.qs";
  qs::c_qsave(pos,pos_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pos values: "<< pos << std::endl;
  NumericVector min_dist(1);
  min_dist[0]  = RcppDeepState_double();
  std::string min_dist_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/reduce_markers/libFuzzer_reduce_markers/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_min_dist.qs";
  qs::c_qsave(min_dist,min_dist_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "min_dist values: "<< min_dist << std::endl;
  NumericVector weights  = RcppDeepState_NumericVector();
  std::string weights_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/reduce_markers/libFuzzer_reduce_markers/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_weights.qs";
  qs::c_qsave(weights,weights_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "weights values: "<< weights << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    reduce_markers(pos,min_dist[0],weights);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
