// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// random_int_DeepState_TestHarness_generation.cpp and random_int_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector random_int(const int n, const int low, const int high);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  std::string n_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/random_int/libFuzzer_random_int/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n.qs";
  qs::c_qsave(n,n_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  IntegerVector low(1);
  low[0]  = RcppDeepState_int();
  std::string low_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/random_int/libFuzzer_random_int/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_low.qs";
  qs::c_qsave(low,low_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "low values: "<< low << std::endl;
  IntegerVector high(1);
  high[0]  = RcppDeepState_int();
  std::string high_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/random_int/libFuzzer_random_int/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_high.qs";
  qs::c_qsave(high,high_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "high values: "<< high << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    random_int(n[0],low[0],high[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
