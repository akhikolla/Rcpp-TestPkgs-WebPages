// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// scan_binary_onechr_DeepState_TestHarness_generation.cpp and scan_binary_onechr_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix scan_binary_onechr(const NumericVector& genoprobs, const NumericMatrix& pheno, const NumericMatrix& addcovar, const int maxit, const double tol, const double qr_tol, const double eta_max);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector genoprobs  = RcppDeepState_NumericVector();
  std::string genoprobs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/scan_binary_onechr/libFuzzer_scan_binary_onechr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_genoprobs.qs";
  qs::c_qsave(genoprobs,genoprobs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "genoprobs values: "<< genoprobs << std::endl;
  NumericMatrix pheno  = RcppDeepState_NumericMatrix();
  std::string pheno_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/scan_binary_onechr/libFuzzer_scan_binary_onechr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pheno.qs";
  qs::c_qsave(pheno,pheno_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pheno values: "<< pheno << std::endl;
  NumericMatrix addcovar  = RcppDeepState_NumericMatrix();
  std::string addcovar_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/scan_binary_onechr/libFuzzer_scan_binary_onechr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_addcovar.qs";
  qs::c_qsave(addcovar,addcovar_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "addcovar values: "<< addcovar << std::endl;
  IntegerVector maxit(1);
  maxit[0]  = RcppDeepState_int();
  std::string maxit_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/scan_binary_onechr/libFuzzer_scan_binary_onechr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_maxit.qs";
  qs::c_qsave(maxit,maxit_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxit values: "<< maxit << std::endl;
  NumericVector tol(1);
  tol[0]  = RcppDeepState_double();
  std::string tol_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/scan_binary_onechr/libFuzzer_scan_binary_onechr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tol.qs";
  qs::c_qsave(tol,tol_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tol values: "<< tol << std::endl;
  NumericVector qr_tol(1);
  qr_tol[0]  = RcppDeepState_double();
  std::string qr_tol_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/scan_binary_onechr/libFuzzer_scan_binary_onechr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_qr_tol.qs";
  qs::c_qsave(qr_tol,qr_tol_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "qr_tol values: "<< qr_tol << std::endl;
  NumericVector eta_max(1);
  eta_max[0]  = RcppDeepState_double();
  std::string eta_max_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/scan_binary_onechr/libFuzzer_scan_binary_onechr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_eta_max.qs";
  qs::c_qsave(eta_max,eta_max_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "eta_max values: "<< eta_max << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    scan_binary_onechr(genoprobs,pheno,addcovar,maxit[0],tol[0],qr_tol[0],eta_max[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
