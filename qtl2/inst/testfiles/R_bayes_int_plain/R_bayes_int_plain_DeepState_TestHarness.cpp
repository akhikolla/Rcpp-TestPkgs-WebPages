// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// R_bayes_int_plain_DeepState_TestHarness_generation.cpp and R_bayes_int_plain_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector R_bayes_int_plain(const NumericVector& lod, const NumericVector& pos, const double prob);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector lod  = RcppDeepState_NumericVector();
  qs::c_qsave(lod,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/R_bayes_int_plain/inputs/lod.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lod values: "<< lod << std::endl;
  NumericVector pos  = RcppDeepState_NumericVector();
  qs::c_qsave(pos,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/R_bayes_int_plain/inputs/pos.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pos values: "<< pos << std::endl;
  NumericVector prob(1);
  prob[0]  = RcppDeepState_double();
  qs::c_qsave(prob,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/R_bayes_int_plain/inputs/prob.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prob values: "<< prob << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    R_bayes_int_plain(lod,pos,prob[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
