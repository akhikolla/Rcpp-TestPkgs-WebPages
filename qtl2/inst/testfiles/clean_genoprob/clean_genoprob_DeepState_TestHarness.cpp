// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// clean_genoprob_DeepState_TestHarness_generation.cpp and clean_genoprob_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector clean_genoprob(const NumericVector& prob_array, double value_threshold, double column_threshold);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector prob_array  = RcppDeepState_NumericVector();
  qs::c_qsave(prob_array,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/clean_genoprob/inputs/prob_array.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prob_array values: "<< prob_array << std::endl;
  NumericVector value_threshold(1);
  value_threshold[0]  = RcppDeepState_double();
  qs::c_qsave(value_threshold,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/clean_genoprob/inputs/value_threshold.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "value_threshold values: "<< value_threshold << std::endl;
  NumericVector column_threshold(1);
  column_threshold[0]  = RcppDeepState_double();
  qs::c_qsave(column_threshold,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/clean_genoprob/inputs/column_threshold.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "column_threshold values: "<< column_threshold << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    clean_genoprob(prob_array,value_threshold[0],column_threshold[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
