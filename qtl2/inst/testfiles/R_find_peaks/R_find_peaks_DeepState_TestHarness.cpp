// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// R_find_peaks_DeepState_TestHarness_generation.cpp and R_find_peaks_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List R_find_peaks(const NumericVector& lod, const double threshold, const double peakdrop);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector lod  = RcppDeepState_NumericVector();
  qs::c_qsave(lod,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/R_find_peaks/inputs/lod.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lod values: "<< lod << std::endl;
  NumericVector threshold(1);
  threshold[0]  = RcppDeepState_double();
  qs::c_qsave(threshold,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/R_find_peaks/inputs/threshold.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "threshold values: "<< threshold << std::endl;
  NumericVector peakdrop(1);
  peakdrop[0]  = RcppDeepState_double();
  qs::c_qsave(peakdrop,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/R_find_peaks/inputs/peakdrop.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "peakdrop values: "<< peakdrop << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    R_find_peaks(lod,threshold[0],peakdrop[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
