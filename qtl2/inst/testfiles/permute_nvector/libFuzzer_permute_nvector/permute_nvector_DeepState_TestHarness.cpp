// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// permute_nvector_DeepState_TestHarness_generation.cpp and permute_nvector_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix permute_nvector(const int n_perm, const NumericVector x);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector n_perm(1);
  n_perm[0]  = RcppDeepState_int();
  std::string n_perm_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/permute_nvector/libFuzzer_permute_nvector/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n_perm.qs";
  qs::c_qsave(n_perm,n_perm_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_perm values: "<< n_perm << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/permute_nvector/libFuzzer_permute_nvector/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    permute_nvector(n_perm[0],x);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
