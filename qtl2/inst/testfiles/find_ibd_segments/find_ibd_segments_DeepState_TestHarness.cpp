// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// find_ibd_segments_DeepState_TestHarness_generation.cpp and find_ibd_segments_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix find_ibd_segments(const IntegerVector& g1, const IntegerVector& g2, const NumericVector& p, const double error_prob);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector g1  = RcppDeepState_IntegerVector();
  qs::c_qsave(g1,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/find_ibd_segments/inputs/g1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "g1 values: "<< g1 << std::endl;
  IntegerVector g2  = RcppDeepState_IntegerVector();
  qs::c_qsave(g2,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/find_ibd_segments/inputs/g2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "g2 values: "<< g2 << std::endl;
  NumericVector p  = RcppDeepState_NumericVector();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/find_ibd_segments/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  NumericVector error_prob(1);
  error_prob[0]  = RcppDeepState_double();
  qs::c_qsave(error_prob,"/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/find_ibd_segments/inputs/error_prob.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "error_prob values: "<< error_prob << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    find_ibd_segments(g1,g2,p,error_prob[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
