// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// invert_sdp_DeepState_TestHarness_generation.cpp and invert_sdp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerMatrix invert_sdp(const IntegerVector& sdp, const int n_str);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector sdp  = RcppDeepState_IntegerVector();
  std::string sdp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/invert_sdp/libFuzzer_invert_sdp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sdp.qs";
  qs::c_qsave(sdp,sdp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sdp values: "<< sdp << std::endl;
  IntegerVector n_str(1);
  n_str[0]  = RcppDeepState_int();
  std::string n_str_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/invert_sdp/libFuzzer_invert_sdp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n_str.qs";
  qs::c_qsave(n_str,n_str_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_str values: "<< n_str << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    invert_sdp(sdp,n_str[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
