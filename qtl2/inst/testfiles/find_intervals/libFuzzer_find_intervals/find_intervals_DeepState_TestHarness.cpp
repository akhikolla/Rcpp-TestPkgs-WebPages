// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// find_intervals_DeepState_TestHarness_generation.cpp and find_intervals_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerMatrix find_intervals(const NumericVector& pos, const NumericVector& map, const double tol);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector pos  = RcppDeepState_NumericVector();
  std::string pos_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/find_intervals/libFuzzer_find_intervals/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pos.qs";
  qs::c_qsave(pos,pos_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pos values: "<< pos << std::endl;
  NumericVector map  = RcppDeepState_NumericVector();
  std::string map_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/find_intervals/libFuzzer_find_intervals/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_map.qs";
  qs::c_qsave(map,map_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "map values: "<< map << std::endl;
  NumericVector tol(1);
  tol[0]  = RcppDeepState_double();
  std::string tol_t = "/home/akhila/fuzzer_packages/fuzzedpackages/qtl2/inst/testfiles/find_intervals/libFuzzer_find_intervals/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tol.qs";
  qs::c_qsave(tol,tol_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tol values: "<< tol << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    find_intervals(pos,map,tol[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
