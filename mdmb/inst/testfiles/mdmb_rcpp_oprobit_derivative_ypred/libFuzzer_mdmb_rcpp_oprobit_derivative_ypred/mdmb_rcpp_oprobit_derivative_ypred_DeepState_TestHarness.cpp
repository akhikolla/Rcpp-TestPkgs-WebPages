// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// mdmb_rcpp_oprobit_derivative_ypred_DeepState_TestHarness_generation.cpp and mdmb_rcpp_oprobit_derivative_ypred_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List mdmb_rcpp_oprobit_derivative_ypred(Rcpp::NumericVector ypred, Rcpp::NumericVector thresh_low, Rcpp::NumericVector thresh_upp, Rcpp::NumericVector y);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector ypred  = RcppDeepState_NumericVector();
  std::string ypred_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mdmb/inst/testfiles/mdmb_rcpp_oprobit_derivative_ypred/libFuzzer_mdmb_rcpp_oprobit_derivative_ypred/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ypred.qs";
  std::string y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mdmb/inst/testfiles/mdmb_rcpp_oprobit_derivative_ypred/libFuzzer_mdmb_rcpp_oprobit_derivative_ypred/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_y.qs";
  qs::c_qsave(ypred,ypred_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ypred values: "<< ypred << std::endl;
  NumericVector thresh_low  = RcppDeepState_NumericVector();
  std::string thresh_low_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mdmb/inst/testfiles/mdmb_rcpp_oprobit_derivative_ypred/libFuzzer_mdmb_rcpp_oprobit_derivative_ypred/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_thresh_low.qs";
  qs::c_qsave(thresh_low,thresh_low_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "thresh_low values: "<< thresh_low << std::endl;
  NumericVector thresh_upp  = RcppDeepState_NumericVector();
  std::string thresh_upp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mdmb/inst/testfiles/mdmb_rcpp_oprobit_derivative_ypred/libFuzzer_mdmb_rcpp_oprobit_derivative_ypred/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_thresh_upp.qs";
  qs::c_qsave(thresh_upp,thresh_upp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "thresh_upp values: "<< thresh_upp << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  std::string y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mdmb/inst/testfiles/mdmb_rcpp_oprobit_derivative_ypred/libFuzzer_mdmb_rcpp_oprobit_derivative_ypred/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_y.qs";
  qs::c_qsave(y,y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    mdmb_rcpp_oprobit_derivative_ypred(ypred,thresh_low,thresh_upp,y);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
